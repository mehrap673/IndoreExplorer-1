{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2766},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"client/next.config.js":{"content":"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  images: {\n    domains: ['images.unsplash.com', 'pixabay.com'],\n    remotePatterns: [\n      {\n        protocol: 'https',\n        hostname: 'images.unsplash.com',\n      },\n      {\n        protocol: 'https',\n        hostname: 'pixabay.com',\n      },\n    ],\n  },\n}\n\nmodule.exports = nextConfig\n","size_bytes":354},"client/tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"sans-serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config;\n","size_bytes":2001},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactMessageSchema, type WeatherData, type NewsArticle } from \"@shared/schema\";\n\nconst OPENWEATHER_API_KEY = process.env.OPENWEATHER_API_KEY || 'demo_key';\nconst NEWS_API_KEY = process.env.NEWS_API_KEY || 'demo_key';\n\nasync function getWeatherData(): Promise<WeatherData | null> {\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=Indore,IN&appid=${OPENWEATHER_API_KEY}&units=metric`\n    );\n    \n    if (!response.ok) {\n      console.error('Weather API error:', response.status);\n      return null;\n    }\n    \n    const data = await response.json();\n    \n    // Get forecast data\n    const forecastResponse = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=Indore,IN&appid=${OPENWEATHER_API_KEY}&units=metric`\n    );\n    \n    const forecastData = forecastResponse.ok ? await forecastResponse.json() : null;\n    \n    return {\n      temperature: Math.round(data.main.temp),\n      condition: data.weather[0].description,\n      humidity: data.main.humidity,\n      windSpeed: Math.round(data.wind.speed * 3.6), // Convert m/s to km/h\n      visibility: Math.round(data.visibility / 1000), // Convert m to km\n      feelsLike: Math.round(data.main.feels_like),\n      forecast: forecastData?.list?.slice(0, 7).map((item: any, index: number) => ({\n        day: index === 0 ? 'Today' : new Date(item.dt * 1000).toLocaleDateString('en', { weekday: 'short' }),\n        icon: item.weather[0].icon,\n        condition: item.weather[0].main,\n        high: Math.round(item.main.temp_max),\n        low: Math.round(item.main.temp_min),\n      })) || []\n    };\n  } catch (error) {\n    console.error('Failed to fetch weather data:', error);\n    return null;\n  }\n}\n\nasync function getNewsData(): Promise<NewsArticle[]> {\n  try {\n    const response = await fetch(\n      `https://newsapi.org/v2/everything?q=Indore&apiKey=${NEWS_API_KEY}&language=en&sortBy=publishedAt&pageSize=10`\n    );\n    \n    if (!response.ok) {\n      console.error('News API error:', response.status);\n      return [];\n    }\n    \n    const data = await response.json();\n    \n    return data.articles?.map((article: any) => ({\n      id: article.url,\n      title: article.title,\n      description: article.description,\n      content: article.content,\n      author: article.author || 'Unknown',\n      publishedAt: article.publishedAt,\n      urlToImage: article.urlToImage,\n      category: 'general',\n      url: article.url,\n    })) || [];\n  } catch (error) {\n    console.error('Failed to fetch news data:', error);\n    return [];\n  }\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Weather API\n  app.get('/api/weather', async (req, res) => {\n    try {\n      const weatherData = await getWeatherData();\n      \n      if (!weatherData) {\n        return res.status(500).json({ error: 'Failed to fetch weather data' });\n      }\n      \n      res.json(weatherData);\n    } catch (error) {\n      console.error('Weather API error:', error);\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  });\n\n  // News API\n  app.get('/api/news', async (req, res) => {\n    try {\n      const newsData = await getNewsData();\n      res.json(newsData);\n    } catch (error) {\n      console.error('News API error:', error);\n      res.status(500).json({ error: 'Failed to fetch news data' });\n    }\n  });\n\n  // Contact form API\n  app.post('/api/contact', async (req, res) => {\n    try {\n      const validatedData = insertContactMessageSchema.parse(req.body);\n      \n      // Validate email format\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(validatedData.email)) {\n        return res.status(400).json({ error: 'Invalid email format' });\n      }\n      \n      // Store in database (if using database) or handle the contact message\n      // await storage.insertContactMessage(validatedData);\n      \n      // For now, just log the contact form submission\n      console.log('Contact form submission:', {\n        name: `${validatedData.firstName} ${validatedData.lastName}`,\n        email: validatedData.email,\n        subject: validatedData.subject,\n        message: validatedData.message,\n        timestamp: new Date().toISOString()\n      });\n      \n      res.json({ message: 'Message sent successfully' });\n    } catch (error) {\n      console.error('Contact form error:', error);\n      res.status(500).json({ error: 'Failed to send message' });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":4638},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contactMessages = pgTable(\"contact_messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  subject: text(\"subject\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").default(sql`CURRENT_TIMESTAMP`),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactMessageSchema = createInsertSchema(contactMessages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertContactMessage = z.infer<typeof insertContactMessageSchema>;\nexport type ContactMessage = typeof contactMessages.$inferSelect;\n\n// API Data Types (for external API responses)\nexport interface WeatherData {\n  temperature: number;\n  condition: string;\n  humidity: number;\n  windSpeed: number;\n  visibility: number;\n  feelsLike: number;\n  forecast: {\n    day: string;\n    icon: string;\n    condition: string;\n    high: number;\n    low: number;\n  }[];\n}\n\nexport interface NewsArticle {\n  id: string;\n  title: string;\n  description: string;\n  content: string;\n  author: string;\n  publishedAt: string;\n  urlToImage?: string;\n  category: string;\n  url: string;\n}\n\nexport interface Place {\n  id: string;\n  name: string;\n  description: string;\n  category: 'historical' | 'religious' | 'modern' | 'nature';\n  imageUrl: string;\n  location: string;\n}\n\nexport interface Food {\n  id: string;\n  name: string;\n  description: string;\n  category: 'breakfast' | 'snacks' | 'sweets' | 'dinner';\n  imageUrl: string;\n  priceRange: string;\n  rating: number;\n}\n\nexport interface Event {\n  id: string;\n  name: string;\n  description: string;\n  date: string;\n  category: 'cultural' | 'religious' | 'festival' | 'food';\n  imageUrl: string;\n  location: string;\n  price?: string;\n}\n","size_bytes":2391},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/components/ThemeProvider\";\nimport Home from \"@/pages/Home\";\nimport About from \"@/pages/About\";\nimport Contact from \"@/pages/Contact\";\nimport Weather from \"@/pages/Weather\";\nimport News from \"@/pages/News\";\nimport Places from \"@/pages/Places\";\nimport Food from \"@/pages/Food\";\nimport Events from \"@/pages/Events\";\nimport Gallery from \"@/pages/Gallery\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/weather\" component={Weather} />\n      <Route path=\"/news\" component={News} />\n      <Route path=\"/places\" component={Places} />\n      <Route path=\"/food\" component={Food} />\n      <Route path=\"/events\" component={Events} />\n      <Route path=\"/gallery\" component={Gallery} />\n      {/* Fallback to 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <ThemeProvider attribute=\"class\" defaultTheme=\"light\" enableSystem>\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <Router />\n        </TooltipProvider>\n      </QueryClientProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1509},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(45 15% 97%);\n  --foreground: hsl(25 15% 15%);\n  --card: hsl(48 20% 95%);\n  --card-foreground: hsl(25 15% 15%);\n  --popover: hsl(45 15% 97%);\n  --popover-foreground: hsl(25 15% 15%);\n  --primary: hsl(15 85% 58%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(35 25% 85%);\n  --secondary-foreground: hsl(25 25% 25%);\n  --muted: hsl(40 10% 88%);\n  --muted-foreground: hsl(25 15% 45%);\n  --accent: hsl(25 45% 88%);\n  --accent-foreground: hsl(15 85% 58%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(201.4286 30.4348% 90.9804%);\n  --input: hsl(200 23.0769% 97.4510%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(211.5789 51.3514% 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-border: hsl(205.0000 25.0000% 90.5882%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: Open Sans, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(240 8% 8%);\n  --foreground: hsl(45 12% 90%);\n  --card: hsl(240 6% 12%);\n  --card-foreground: hsl(45 8% 85%);\n  --popover: hsl(240 8% 8%);\n  --popover-foreground: hsl(45 12% 90%);\n  --primary: hsl(25 75% 55%);\n  --primary-foreground: hsl(240 8% 8%);\n  --secondary: hsl(240 6% 18%);\n  --secondary-foreground: hsl(45 8% 85%);\n  --muted: hsl(240 4% 16%);\n  --muted-foreground: hsl(240 5% 65%);\n  --accent: hsl(240 6% 20%);\n  --accent-foreground: hsl(25 75% 55%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207.6923 27.6596% 18.4314%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(228 9.8039% 10%);\n  --sidebar-foreground: hsl(0 0% 85.0980%);\n  --sidebar-primary: hsl(202.8169 89.1213% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(205.7143 70% 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --sidebar-border: hsl(205.7143 15.7895% 26.0784%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: Open Sans, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  /* Tourism-inspired gradients */\n  .hero-gradient {\n    background: linear-gradient(\n      135deg,\n      rgba(0, 0, 0, 0.6) 0%,\n      rgba(139, 69, 19, 0.4) 50%,\n      rgba(255, 140, 0, 0.3) 100%\n    );\n  }\n\n  .nav-blur {\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n  }\n\n  .card-hover {\n    transition: all 0.3s ease;\n  }\n\n  .card-hover:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  }\n\n  .dark .hero-gradient {\n    background: linear-gradient(\n      135deg,\n      rgba(0, 0, 0, 0.8) 0%,\n      rgba(139, 69, 19, 0.6) 50%,\n      rgba(255, 140, 0, 0.4) 100%\n    );\n  }\n\n  .dark .card-hover:hover {\n    box-shadow: 0 20px 25px -5px rgba(255, 140, 0, 0.2), 0 10px 10px -5px rgba(255, 140, 0, 0.1);\n  }\n}","size_bytes":5687},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/app/globals.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(240 10% 6%);\n  --foreground: hsl(0 0% 90%);\n  --card: hsl(240 10% 10%);\n  --card-foreground: hsl(0 0% 90%);\n  --popover: hsl(240 10% 10%);\n  --popover-foreground: hsl(0 0% 90%);\n  --primary: hsl(217 91% 60%);\n  --primary-foreground: hsl(0 0% 98%);\n  --secondary: hsl(240 4% 16%);\n  --secondary-foreground: hsl(0 0% 90%);\n  --muted: hsl(240 4% 16%);\n  --muted-foreground: hsl(240 5% 65%);\n  --accent: hsl(240 4% 16%);\n  --accent-foreground: hsl(0 0% 90%);\n  --destructive: hsl(0 63% 31%);\n  --destructive-foreground: hsl(0 0% 98%);\n  --border: hsl(240 6% 20%);\n  --input: hsl(240 6% 20%);\n  --ring: hsl(217 91% 60%);\n  --radius: 0.75rem;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\n.hero-gradient {\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(15, 15, 15, 0.8) 100%);\n}\n\n.card-hover {\n  transition: all 0.3s ease;\n}\n\n.card-hover:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n}\n\n.nav-blur {\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n}\n\n.masonry-grid {\n  column-count: 3;\n  column-gap: 1rem;\n}\n\n@media (max-width: 768px) {\n  .masonry-grid {\n    column-count: 2;\n  }\n}\n\n@media (max-width: 640px) {\n  .masonry-grid {\n    column-count: 1;\n  }\n}\n\n.masonry-item {\n  display: inline-block;\n  width: 100%;\n  margin-bottom: 1rem;\n}\n\n.timeline-line {\n  background: linear-gradient(to bottom, transparent 0%, hsl(217 91% 60%) 50%, transparent 100%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground antialiased;\n    font-family: 'Inter', sans-serif;\n  }\n}\n","size_bytes":1772},"client/src/app/layout.tsx":{"content":"import type { Metadata } from 'next';\nimport { Inter } from 'next/font/google';\nimport './globals.css';\nimport Navigation from '@/components/ui/navigation';\nimport Footer from '@/components/ui/footer';\nimport { Toaster } from '@/components/ui/toaster';\n\nconst inter = Inter({ subsets: ['latin'] });\n\nexport const metadata: Metadata = {\n  title: {\n    default: 'All About Indore - Discover the Heart of Madhya Pradesh',\n    template: '%s | All About Indore'\n  },\n  description: 'Explore Indore\\'s rich culture, delicious cuisine, historical places, and vibrant events. Your complete guide to the Heart of Madhya Pradesh.',\n  keywords: ['Indore', 'Madhya Pradesh', 'tourism', 'food', 'places', 'events', 'culture', 'history'],\n  authors: [{ name: 'All About Indore Team' }],\n  creator: 'All About Indore',\n  publisher: 'All About Indore',\n  openGraph: {\n    type: 'website',\n    locale: 'en_IN',\n    url: 'https://all-about-indore.vercel.app',\n    siteName: 'All About Indore',\n    title: 'All About Indore - Discover the Heart of Madhya Pradesh',\n    description: 'Explore Indore\\'s rich culture, delicious cuisine, historical places, and vibrant events.',\n    images: [\n      {\n        url: '/og-image.jpg',\n        width: 1200,\n        height: 630,\n        alt: 'All About Indore'\n      }\n    ]\n  },\n  twitter: {\n    card: 'summary_large_image',\n    title: 'All About Indore - Discover the Heart of Madhya Pradesh',\n    description: 'Explore Indore\\'s rich culture, delicious cuisine, historical places, and vibrant events.',\n    images: ['/og-image.jpg']\n  },\n  robots: {\n    index: true,\n    follow: true,\n    googleBot: {\n      index: true,\n      follow: true,\n      'max-video-preview': -1,\n      'max-image-preview': 'large',\n      'max-snippet': -1,\n    },\n  },\n  verification: {\n    google: 'google-verification-code',\n  },\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" className=\"dark\">\n      <body className={inter.className}>\n        <Navigation />\n        <main className=\"pt-16\">\n          {children}\n        </main>\n        <Footer />\n        <Toaster />\n      </body>\n    </html>\n  );\n}\n","size_bytes":2179},"client/src/app/manifest.ts":{"content":"import type { MetadataRoute } from 'next';\n\nexport default function manifest(): MetadataRoute.Manifest {\n  return {\n    name: 'All About Indore - Discover the Heart of Madhya Pradesh',\n    short_name: 'All About Indore',\n    description: 'Explore Indore\\'s rich culture, delicious cuisine, historical places, and vibrant events. Your complete guide to the Heart of Madhya Pradesh.',\n    start_url: '/',\n    display: 'standalone',\n    background_color: '#0d1117',\n    theme_color: '#3b82f6',\n    orientation: 'portrait',\n    scope: '/',\n    categories: ['travel', 'tourism', 'culture', 'food', 'education'],\n    lang: 'en-IN',\n    icons: [\n      {\n        src: '/icon-192x192.png',\n        sizes: '192x192',\n        type: 'image/png',\n        purpose: 'maskable'\n      },\n      {\n        src: '/icon-256x256.png',\n        sizes: '256x256',\n        type: 'image/png'\n      },\n      {\n        src: '/icon-384x384.png',\n        sizes: '384x384',\n        type: 'image/png'\n      },\n      {\n        src: '/icon-512x512.png',\n        sizes: '512x512',\n        type: 'image/png',\n        purpose: 'maskable'\n      }\n    ],\n    shortcuts: [\n      {\n        name: 'Places to Visit',\n        short_name: 'Places',\n        description: 'Discover Indore\\'s attractions',\n        url: '/places',\n        icons: [{ src: '/icon-192x192.png', sizes: '192x192' }]\n      },\n      {\n        name: 'Food & Cuisine',\n        short_name: 'Food',\n        description: 'Explore Indore\\'s food culture',\n        url: '/food',\n        icons: [{ src: '/icon-192x192.png', sizes: '192x192' }]\n      },\n      {\n        name: 'Events & Festivals',\n        short_name: 'Events',\n        description: 'Check upcoming events',\n        url: '/events',\n        icons: [{ src: '/icon-192x192.png', sizes: '192x192' }]\n      },\n      {\n        name: 'Weather',\n        short_name: 'Weather',\n        description: 'Current weather conditions',\n        url: '/weather',\n        icons: [{ src: '/icon-192x192.png', sizes: '192x192' }]\n      }\n    ]\n  };\n}\n","size_bytes":2015},"client/src/app/page.tsx":{"content":"'use client';\n\nimport { motion } from 'framer-motion';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport Hero from '@/components/ui/hero';\n\nconst highlights = [\n  {\n    title: 'Historical Places',\n    description: 'Explore magnificent palaces, ancient temples, and architectural marvels',\n    imageUrl: 'https://images.unsplash.com/photo-1582510003544-4d00b7f74220?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/places',\n    icon: '🏛️',\n    stats: '15+ Attractions'\n  },\n  {\n    title: 'Food & Cuisine',\n    description: 'Savor authentic Indori flavors from famous poha-jalebi to diverse street food delights',\n    imageUrl: 'https://images.unsplash.com/photo-1626132647523-66f5bf380027?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/food',\n    icon: '🍽️',\n    stats: '200+ Dishes'\n  },\n  {\n    title: 'Events & Festivals',\n    description: 'Join vibrant celebrations and cultural events that bring the city to life throughout the year',\n    imageUrl: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/events',\n    icon: '🎉',\n    stats: '50+ Events'\n  },\n  {\n    title: 'Weather',\n    description: 'Stay updated with real-time weather conditions and plan your perfect visit to Indore',\n    imageUrl: 'https://images.unsplash.com/photo-1504608524841-42fe6f032b4b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/weather',\n    icon: '🌤️',\n    stats: 'Live Updates'\n  },\n];\n\nexport default function HomePage() {\n  return (\n    <>\n      <Hero />\n      \n      {/* Quick Highlights */}\n      <section className=\"py-20 bg-card\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">Discover Indore</h2>\n            <p className=\"text-muted-foreground text-lg\">Experience the best of what our city has to offer</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {highlights.map((item, index) => (\n              <motion.div\n                key={item.title}\n                initial={{ opacity: 0, y: 50 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ y: -8 }}\n                className=\"bg-background border border-border rounded-lg p-6 card-hover cursor-pointer\"\n                data-testid={`card-${item.title.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                <Link href={item.href}>\n                  <div className=\"relative h-40 mb-4 rounded-lg overflow-hidden\">\n                    <Image\n                      src={item.imageUrl}\n                      alt={item.title}\n                      fill\n                      className=\"object-cover\"\n                    />\n                  </div>\n                  <div className=\"flex items-center mb-3\">\n                    <span className=\"text-xl mr-3\">{item.icon}</span>\n                    <h3 className=\"text-xl font-semibold\">{item.title}</h3>\n                  </div>\n                  <p className=\"text-muted-foreground mb-4\">{item.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-primary font-semibold\">{item.stats}</span>\n                    <svg className=\"w-4 h-4 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </Link>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Section */}\n      <section className=\"py-20 bg-secondary\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-4xl font-bold mb-6 text-foreground\">Why Visit Indore?</h2>\n              <p className=\"text-muted-foreground text-lg mb-8\">\n                Indore, the largest city in Madhya Pradesh, is a perfect blend of historical significance and modern development. Known as the commercial capital of the state, it offers visitors a unique experience with its rich culture, delicious food, and warm hospitality.\n              </p>\n              <div className=\"space-y-4\">\n                {[\n                  'Rich historical heritage and architecture',\n                  'World-famous street food culture',\n                  'Vibrant festivals and cultural events',\n                  'Modern shopping and entertainment'\n                ].map((feature, index) => (\n                  <motion.div\n                    key={feature}\n                    className=\"flex items-center\"\n                    initial={{ opacity: 0, x: -20 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    transition={{ duration: 0.6, delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                  >\n                    <svg className=\"w-5 h-5 text-primary mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span className=\"text-foreground\">{feature}</span>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, x: 50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"relative h-96 rounded-xl overflow-hidden\">\n                <Image\n                  src=\"https://images.unsplash.com/photo-1570939274717-7eda259b50ed?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\n                  alt=\"Indore cityscape panoramic view\"\n                  fill\n                  className=\"object-cover\"\n                />\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":6758},"client/src/app/robots.ts":{"content":"import type { MetadataRoute } from 'next';\n\nexport default function robots(): MetadataRoute.Robots {\n  return {\n    rules: [\n      {\n        userAgent: '*',\n        allow: '/',\n        disallow: ['/api/', '/admin/']\n      },\n      {\n        userAgent: 'Googlebot',\n        allow: '/',\n        crawlDelay: 1\n      }\n    ],\n    sitemap: 'https://all-about-indore.vercel.app/sitemap.xml',\n    host: 'https://all-about-indore.vercel.app'\n  };\n}\n","size_bytes":441},"client/src/app/sitemap.ts":{"content":"import type { MetadataRoute } from 'next';\n\nexport default function sitemap(): MetadataRoute.Sitemap {\n  const baseUrl = 'https://all-about-indore.vercel.app';\n  \n  // Static pages\n  const staticPages = [\n    '',\n    '/places',\n    '/food',\n    '/events',\n    '/weather',\n    '/news',\n    '/gallery',\n    '/about',\n    '/contact'\n  ];\n  \n  const staticSitemap: MetadataRoute.Sitemap = staticPages.map((path) => ({\n    url: `${baseUrl}${path}`,\n    lastModified: new Date(),\n    changeFrequency: path === '' ? 'daily' : path === '/news' || path === '/weather' ? 'hourly' : 'weekly',\n    priority: path === '' ? 1 : path === '/places' || path === '/food' ? 0.9 : 0.8\n  }));\n\n  return [\n    ...staticSitemap,\n    // Additional dynamic content could be added here\n    // For example, individual place pages, event pages, etc.\n  ];\n}\n","size_bytes":829},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/api.ts":{"content":"import { WeatherData, NewsArticle } from './types';\n\nconst OPENWEATHER_API_KEY = process.env.NEXT_PUBLIC_OPENWEATHER_API_KEY || process.env.OPENWEATHER_API_KEY || 'demo_key';\nconst NEWS_API_KEY = process.env.NEXT_PUBLIC_NEWS_API_KEY || process.env.NEWS_API_KEY || 'demo_key';\n\nexport async function getWeatherData(): Promise<WeatherData | null> {\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=Indore,IN&appid=${OPENWEATHER_API_KEY}&units=metric`\n    );\n    \n    if (!response.ok) {\n      console.error('Weather API error:', response.status);\n      return null;\n    }\n    \n    const data = await response.json();\n    \n    // Get forecast data\n    const forecastResponse = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=Indore,IN&appid=${OPENWEATHER_API_KEY}&units=metric`\n    );\n    \n    const forecastData = forecastResponse.ok ? await forecastResponse.json() : null;\n    \n    return {\n      temperature: Math.round(data.main.temp),\n      condition: data.weather[0].description,\n      humidity: data.main.humidity,\n      windSpeed: Math.round(data.wind.speed * 3.6), // Convert m/s to km/h\n      visibility: Math.round(data.visibility / 1000), // Convert m to km\n      feelsLike: Math.round(data.main.feels_like),\n      forecast: forecastData?.list?.slice(0, 7).map((item: any, index: number) => ({\n        day: index === 0 ? 'Today' : new Date(item.dt * 1000).toLocaleDateString('en', { weekday: 'short' }),\n        icon: item.weather[0].icon,\n        condition: item.weather[0].main,\n        high: Math.round(item.main.temp_max),\n        low: Math.round(item.main.temp_min),\n      })) || []\n    };\n  } catch (error) {\n    console.error('Failed to fetch weather data:', error);\n    return null;\n  }\n}\n\nexport async function getNewsData(): Promise<NewsArticle[]> {\n  try {\n    const response = await fetch(\n      `https://newsapi.org/v2/everything?q=Indore&apiKey=${NEWS_API_KEY}&language=en&sortBy=publishedAt&pageSize=10`\n    );\n    \n    if (!response.ok) {\n      console.error('News API error:', response.status);\n      return [];\n    }\n    \n    const data = await response.json();\n    \n    return data.articles?.map((article: any) => ({\n      id: article.url,\n      title: article.title,\n      description: article.description,\n      content: article.content,\n      author: article.author || 'Unknown',\n      publishedAt: article.publishedAt,\n      urlToImage: article.urlToImage,\n      category: 'general',\n      url: article.url,\n    })) || [];\n  } catch (error) {\n    console.error('Failed to fetch news data:', error);\n    return [];\n  }\n}\n\nexport async function getWikipediaData(query: string): Promise<any> {\n  try {\n    const response = await fetch(\n      `https://en.wikipedia.org/api/rest_v1/page/summary/${encodeURIComponent(query)}`\n    );\n    \n    if (!response.ok) {\n      return null;\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Failed to fetch Wikipedia data:', error);\n    return null;\n  }\n}\n","size_bytes":3029},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/types.ts":{"content":"export interface WeatherData {\n  temperature: number;\n  condition: string;\n  humidity: number;\n  windSpeed: number;\n  visibility: number;\n  feelsLike: number;\n  forecast: {\n    day: string;\n    icon: string;\n    condition: string;\n    high: number;\n    low: number;\n  }[];\n}\n\nexport interface NewsArticle {\n  id: string;\n  title: string;\n  description: string;\n  content: string;\n  author: string;\n  publishedAt: string;\n  urlToImage?: string;\n  category: string;\n  url: string;\n}\n\nexport interface Place {\n  id: string;\n  name: string;\n  description: string;\n  category: 'historical' | 'religious' | 'modern' | 'nature';\n  imageUrl: string;\n  location: string;\n}\n\nexport interface Food {\n  id: string;\n  name: string;\n  description: string;\n  category: 'breakfast' | 'snacks' | 'sweets' | 'dinner';\n  imageUrl: string;\n  priceRange: string;\n  rating: number;\n}\n\nexport interface Event {\n  id: string;\n  name: string;\n  description: string;\n  date: string;\n  category: 'cultural' | 'religious' | 'festival' | 'food';\n  imageUrl: string;\n  location: string;\n  price?: string;\n}\n\nexport interface ContactForm {\n  name: string;\n  email: string;\n  subject: string;\n  message: string;\n}\n","size_bytes":1182},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/app/about/page.tsx":{"content":"'use client';\n\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\n\nconst timelineEvents = [\n  {\n    year: '1715',\n    title: 'Foundation of Indore',\n    description: 'Rao Nandlal Chaudhary establishes Indore as a trading post on the banks of river Saraswati, marking the beginning of the city\\'s commercial legacy.'\n  },\n  {\n    year: '1733',\n    title: 'Holkar Dynasty Begins',\n    description: 'Malhar Rao Holkar I establishes the Holkar dynasty, transforming Indore into a major power center in Central India.'\n  },\n  {\n    year: '1767-1795',\n    title: 'Ahilya Bai\\'s Golden Era',\n    description: 'Queen Ahilya Bai Holkar\\'s enlightened rule brings prosperity, with extensive temple construction and infrastructure development across the region.'\n  },\n  {\n    year: '1886',\n    title: 'Lal Bagh Palace',\n    description: 'Construction of the magnificent Lal Bagh Palace begins, showcasing European architectural influences and royal grandeur.'\n  },\n  {\n    year: '1947',\n    title: 'Integration with India',\n    description: 'Indore state merges with the Indian Union, marking the beginning of modern democratic governance and rapid development.'\n  },\n  {\n    year: '2016-2022',\n    title: 'Cleanest City Achievement',\n    description: 'Indore wins the title of India\\'s Cleanest City for six consecutive years, setting new standards in urban cleanliness and governance.'\n  }\n];\n\nconst facts = [\n  { icon: '📅', label: 'Founded', value: '1715 AD' },\n  { icon: '👥', label: 'Population', value: '3.2 Million' },\n  { icon: '📍', label: 'Area', value: '530 km²' },\n  { icon: '🗣️', label: 'Languages', value: 'Hindi, English' }\n];\n\nconst culturalSignificance = [\n  {\n    icon: '🍽️',\n    title: 'Food Capital',\n    description: 'Recognized as India\\'s food capital with unique culinary traditions and the highest concentration of food outlets.'\n  },\n  {\n    icon: '🏭',\n    title: 'Commercial Hub',\n    description: 'Major industrial and commercial center of Central India, driving economic growth in the region.'\n  },\n  {\n    icon: '🏆',\n    title: 'Clean City',\n    description: 'Consistently ranked among India\\'s cleanest cities, setting benchmarks for urban cleanliness and waste management.'\n  }\n];\n\nexport default function AboutPage() {\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">About Indore</h1>\n          <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\">\n            Discover the rich history and heritage of the Heart of Madhya Pradesh\n          </p>\n        </motion.div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 mb-16\">\n          {/* About Content */}\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h3 className=\"text-2xl font-semibold mb-6\">The Commercial Capital of Madhya Pradesh</h3>\n            <p className=\"text-muted-foreground mb-6\">\n              Indore, the largest city in Madhya Pradesh, stands as a testament to India's rich cultural heritage and modern progress. Known as the commercial capital of the state, it seamlessly blends traditional values with contemporary development.\n            </p>\n            <p className=\"text-muted-foreground mb-6\">\n              Famous for being India's cleanest city for six consecutive years, Indore has set benchmarks in urban governance, waste management, and citizen services. The city's commitment to cleanliness and sustainable development has made it a model for other Indian cities.\n            </p>\n            <p className=\"text-muted-foreground mb-6\">\n              Beyond its administrative achievements, Indore is renowned for its vibrant food culture, historical architecture, and warm hospitality. From the iconic Poha-Jalebi breakfast to the bustling Sarafa Bazaar, the city offers a unique culinary experience that attracts food lovers from across the country.\n            </p>\n            \n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-2 gap-4 mt-8\">\n              {facts.map((fact, index) => (\n                <motion.div\n                  key={fact.label}\n                  className=\"bg-card border border-border rounded-lg p-4 text-center\"\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  data-testid={`stat-${fact.label.toLowerCase()}`}\n                >\n                  <div className=\"text-2xl mb-2\">{fact.icon}</div>\n                  <h4 className=\"text-xl font-bold text-primary\">{fact.value}</h4>\n                  <p className=\"text-muted-foreground text-sm\">{fact.label}</p>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Historical Image */}\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"relative h-96 rounded-lg overflow-hidden mb-6\">\n              <Image\n                src=\"https://images.unsplash.com/photo-1582510003544-4d00b7f74220?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n                alt=\"Historical Indore architecture\"\n                fill\n                className=\"object-cover\"\n              />\n            </div>\n            \n            <div className=\"bg-card border border-border rounded-lg p-6\">\n              <h4 className=\"text-lg font-semibold mb-3\">Did You Know?</h4>\n              <ul className=\"space-y-2 text-muted-foreground\">\n                {[\n                  'Indore was founded by Rao Nandlal Chaudhary in 1715',\n                  'The Holkar dynasty ruled Indore for over 200 years',\n                  'Home to India\\'s oldest stock exchange outside Mumbai',\n                  'Known as the \"Detroit of India\" for automotive industry'\n                ].map((fact, index) => (\n                  <li key={index} className=\"flex items-start\">\n                    <svg className=\"w-4 h-4 text-primary mt-1 mr-3 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span>{fact}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </motion.div>\n        </div>\n        \n        {/* Timeline */}\n        <div className=\"mb-16\">\n          <motion.h3\n            className=\"text-2xl font-semibold text-center mb-12\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            Historical Timeline\n          </motion.h3>\n          <div className=\"relative\">\n            <div className=\"absolute left-4 lg:left-1/2 top-0 bottom-0 w-0.5 timeline-line lg:transform lg:-translate-x-0.5\"></div>\n            \n            <div className=\"space-y-12\">\n              {timelineEvents.map((event, index) => (\n                <motion.div\n                  key={event.year}\n                  className=\"relative flex items-start\"\n                  initial={{ opacity: 0, y: 50 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`timeline-${index}`}\n                >\n                  <div className=\"absolute left-2 lg:left-1/2 w-4 h-4 bg-primary rounded-full lg:transform lg:-translate-x-2\"></div>\n                  <div className={`ml-12 lg:ml-0 ${index % 2 === 0 ? 'lg:w-1/2 lg:pr-8' : 'lg:w-1/2 lg:pl-8 lg:ml-auto'}`}>\n                    <div className=\"bg-card border border-border rounded-lg p-6\">\n                      <span className=\"text-primary font-semibold\">{event.year}</span>\n                      <h4 className=\"font-semibold mt-2 mb-3\">{event.title}</h4>\n                      <p className=\"text-muted-foreground\">{event.description}</p>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Cultural Significance */}\n        <motion.div\n          className=\"bg-secondary rounded-2xl p-8\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n        >\n          <h3 className=\"text-2xl font-bold text-foreground text-center mb-8\">Cultural Significance</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {culturalSignificance.map((item, index) => (\n              <motion.div\n                key={item.title}\n                className=\"text-center\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"text-3xl mb-4\">{item.icon}</div>\n                <h4 className=\"text-lg font-semibold text-foreground mb-2\">{item.title}</h4>\n                <p className=\"text-muted-foreground\">{item.description}</p>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9803},"client/src/app/contact/page.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\n\nconst emergencyContacts = [\n  { service: 'Police', number: '100', icon: '🚔' },\n  { service: 'Fire Department', number: '101', icon: '🚒' },\n  { service: 'Ambulance', number: '108', icon: '🚑' },\n  { service: 'Tourist Helpline', number: '1363', icon: 'ℹ️' }\n];\n\nconst faqs = [\n  {\n    question: 'What is the best time to visit Indore?',\n    answer: 'The best time to visit Indore is from October to March when the weather is pleasant and perfect for sightseeing.'\n  },\n  {\n    question: 'How to reach Indore?',\n    answer: 'Indore is well-connected by air, rail, and road. The city has Devi Ahilya Bai Holkar Airport and is a major railway junction.'\n  },\n  {\n    question: 'What are the must-try foods in Indore?',\n    answer: 'Don\\'t miss the famous poha-jalebi breakfast, garadu, samosa, and the vibrant street food scene at Sarafa Bazaar.'\n  },\n  {\n    question: 'Where can I find accommodation?',\n    answer: 'Indore offers accommodation options ranging from budget hotels to luxury resorts, concentrated around the city center and major attractions.'\n  }\n];\n\nexport default function ContactPage() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<{ type: 'success' | 'error', message: string } | null>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n\n    try {\n      const response = await fetch('/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      setSubmitStatus({\n        type: 'success',\n        message: 'Thank you for your message! We will get back to you soon.'\n      });\n      setFormData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        subject: '',\n        message: ''\n      });\n    } catch (error) {\n      setSubmitStatus({\n        type: 'error',\n        message: 'Failed to send message. Please try again later.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">Contact Us</h1>\n          <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\">\n            Get in touch with us for any queries or feedback about All About Indore\n          </p>\n        </motion.div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-6xl mx-auto\">\n          {/* Contact Form */}\n          <motion.div\n            className=\"bg-card border border-border rounded-lg p-8\"\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h3 className=\"text-2xl font-semibold mb-6\">Send us a Message</h3>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label htmlFor=\"firstName\" className=\"block text-sm font-medium mb-2\">\n                    First Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    className=\"w-full bg-background border border-border rounded-lg px-4 py-3 focus:ring-2 focus:ring-primary focus:border-transparent\"\n                    placeholder=\"Your first name\"\n                    required\n                    data-testid=\"input-first-name\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lastName\" className=\"block text-sm font-medium mb-2\">\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    className=\"w-full bg-background border border-border rounded-lg px-4 py-3 focus:ring-2 focus:ring-primary focus:border-transparent\"\n                    placeholder=\"Your last name\"\n                    required\n                    data-testid=\"input-last-name\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium mb-2\">\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"w-full bg-background border border-border rounded-lg px-4 py-3 focus:ring-2 focus:ring-primary focus:border-transparent\"\n                  placeholder=\"your.email@example.com\"\n                  required\n                  data-testid=\"input-email\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"subject\" className=\"block text-sm font-medium mb-2\">\n                  Subject\n                </label>\n                <select\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={formData.subject}\n                  onChange={handleInputChange}\n                  className=\"w-full bg-background border border-border rounded-lg px-4 py-3 focus:ring-2 focus:ring-primary focus:border-transparent\"\n                  required\n                  data-testid=\"select-subject\"\n                >\n                  <option value=\"\">Select a topic</option>\n                  <option value=\"general\">General Inquiry</option>\n                  <option value=\"tourism\">Tourism Information</option>\n                  <option value=\"business\">Business Partnership</option>\n                  <option value=\"technical\">Technical Support</option>\n                  <option value=\"feedback\">Feedback</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n              \n              <div>\n                <label htmlFor=\"message\" className=\"block text-sm font-medium mb-2\">\n                  Message\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleInputChange}\n                  rows={6}\n                  className=\"w-full bg-background border border-border rounded-lg px-4 py-3 focus:ring-2 focus:ring-primary focus:border-transparent resize-none\"\n                  placeholder=\"Tell us more about your inquiry...\"\n                  required\n                  data-testid=\"textarea-message\"\n                />\n              </div>\n\n              {submitStatus && (\n                <div className={`p-4 rounded-lg ${\n                  submitStatus.type === 'success' \n                    ? 'bg-green-500/20 text-green-400 border border-green-500/30' \n                    : 'bg-red-500/20 text-red-400 border border-red-500/30'\n                }`}>\n                  {submitStatus.message}\n                </div>\n              )}\n              \n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"w-full bg-primary hover:bg-primary/90 disabled:bg-primary/50 text-primary-foreground px-6 py-3 rounded-lg font-semibold transition-colors\"\n                data-testid=\"button-submit\"\n              >\n                {isSubmitting ? 'Sending...' : 'Send Message'}\n              </button>\n            </form>\n          </motion.div>\n          \n          {/* Contact Information */}\n          <motion.div\n            className=\"space-y-8\"\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"relative h-48 rounded-xl overflow-hidden\">\n              <Image\n                src=\"https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=300\"\n                alt=\"Government building Indore\"\n                fill\n                className=\"object-cover\"\n              />\n            </div>\n            \n            <div className=\"bg-card border border-border rounded-xl p-6\">\n              <h4 className=\"text-xl font-semibold mb-4\">Tourism Information</h4>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-start gap-3\">\n                  <svg className=\"w-5 h-5 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium\">Address</p>\n                    <p className=\"text-muted-foreground\">Tourism Office, Rajwada<br />Indore, Madhya Pradesh 452007</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-3\">\n                  <svg className=\"w-5 h-5 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium\">Phone</p>\n                    <p className=\"text-muted-foreground\">+91-731-2522990<br />Toll Free: 1800 XXX XXXX</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-3\">\n                  <svg className=\"w-5 h-5 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium\">Email</p>\n                    <p className=\"text-muted-foreground\">info@allaboutindore.com<br />tourism@indore.gov.in</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-3\">\n                  <svg className=\"w-5 h-5 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium\">Office Hours</p>\n                    <p className=\"text-muted-foreground\">Monday - Friday: 9:00 AM - 6:00 PM<br />Saturday: 9:00 AM - 2:00 PM</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Social Media */}\n            <div className=\"bg-card border border-border rounded-xl p-6\">\n              <h4 className=\"text-xl font-semibold mb-4\">Follow Us</h4>\n              <div className=\"flex gap-4\">\n                {[\n                  { name: 'Facebook', icon: 'M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z' },\n                  { name: 'Twitter', icon: 'M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z' },\n                  { name: 'Instagram', icon: 'M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.347-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.75-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.012.001z' },\n                  { name: 'YouTube', icon: 'M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z' },\n                  { name: 'LinkedIn', icon: 'M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z' }\n                ].map((social, index) => (\n                  <a\n                    key={social.name}\n                    href=\"#\"\n                    className=\"bg-primary/10 hover:bg-primary hover:text-primary-foreground text-primary p-3 rounded-lg transition-colors\"\n                    data-testid={`social-${social.name.toLowerCase()}`}\n                  >\n                    <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d={social.icon} />\n                    </svg>\n                  </a>\n                ))}\n              </div>\n            </div>\n\n            {/* Emergency Contacts */}\n            <div className=\"bg-primary/5 border border-primary/20 rounded-lg p-6\">\n              <h4 className=\"font-semibold mb-4 text-primary\">Emergency Contacts</h4>\n              <div className=\"space-y-2 text-sm\">\n                {emergencyContacts.map((contact, index) => (\n                  <div key={contact.service} className=\"flex justify-between items-center\">\n                    <span className=\"flex items-center\">\n                      <span className=\"mr-2\">{contact.icon}</span>\n                      {contact.service}:\n                    </span>\n                    <span className=\"font-semibold\">{contact.number}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* FAQ Section */}\n        <motion.div\n          className=\"mt-16\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n        >\n          <h3 className=\"text-2xl font-bold text-center mb-8\">Frequently Asked Questions</h3>\n          <div className=\"max-w-3xl mx-auto space-y-4\">\n            {faqs.map((faq, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-card border border-border rounded-xl p-6\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                data-testid={`faq-${index}`}\n              >\n                <h4 className=\"text-lg font-semibold mb-2\">{faq.question}</h4>\n                <p className=\"text-muted-foreground\">{faq.answer}</p>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":17848},"client/src/app/events/page.tsx":{"content":"'use client';\n\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\n\nconst events = [\n  {\n    id: 1,\n    name: 'Rangpanchami Festival',\n    description: 'A vibrant celebration of colors marking the end of Holi festivities, unique to Indore with traditional dances and community gatherings.',\n    date: 'March 18, 2024',\n    category: 'festival',\n    imageUrl: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'City Center, Rajwada Palace',\n    price: 'Free'\n  },\n  {\n    id: 2,\n    name: 'Ahilya Utsav',\n    description: 'Annual cultural festival celebrating Rani Ahilya Bai Holkar with classical music, dance performances, and art exhibitions.',\n    date: 'December 2-8, 2024',\n    category: 'cultural',\n    imageUrl: 'https://images.unsplash.com/photo-1611273426858-450d8e3c9fce?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'Lal Bagh Palace Grounds',\n    price: '₹100-500'\n  },\n  {\n    id: 3,\n    name: 'Ganesh Chaturthi',\n    description: 'Grand celebration with elaborate processions, beautifully decorated pandals, and the famous Khajrana Ganesh temple festivities.',\n    date: 'August 30, 2024',\n    category: 'religious',\n    imageUrl: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'Khajrana Ganesh Temple',\n    price: 'Free'\n  },\n  {\n    id: 4,\n    name: 'Navratri Festival',\n    description: 'Nine nights of energetic garba and dandiya dancing with live music and traditional festivities.',\n    date: 'October 15-24, 2024',\n    category: 'festival',\n    imageUrl: 'https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'Various venues across city',\n    price: '₹150-800'\n  }\n];\n\nconst eventCategories = [\n  { name: 'Cultural Festivals', count: 12, color: 'bg-green-500/20 text-green-400' },\n  { name: 'Religious Events', count: 8, color: 'bg-blue-500/20 text-blue-400' },\n  { name: 'Food Festivals', count: 5, color: 'bg-yellow-500/20 text-yellow-400' },\n  { name: 'Art & Music', count: 7, color: 'bg-purple-500/20 text-purple-400' }\n];\n\nexport default function EventsPage() {\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">Events & Festivals</h1>\n          <p className=\"text-muted-foreground text-lg\">Experience the vibrant cultural celebrations of Indore throughout the year</p>\n        </motion.div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Calendar Section */}\n          <div className=\"lg:col-span-2\">\n            <motion.h3\n              className=\"text-2xl font-semibold mb-6\"\n              initial={{ opacity: 0, x: -30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              Upcoming Events\n            </motion.h3>\n            <div className=\"space-y-6\">\n              {events.map((event, index) => (\n                <motion.div\n                  key={event.id}\n                  className=\"bg-card border border-border rounded-lg p-6 flex flex-col md:flex-row gap-6 card-hover\"\n                  initial={{ opacity: 0, y: 50 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  whileHover={{ y: -4 }}\n                  data-testid={`event-${event.id}`}\n                >\n                  <div className=\"relative w-full md:w-48 h-32 rounded-lg overflow-hidden\">\n                    <Image\n                      src={event.imageUrl}\n                      alt={event.name}\n                      fill\n                      className=\"object-cover\"\n                    />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <span className=\"bg-primary text-primary-foreground px-3 py-1 rounded text-sm font-semibold\">\n                        {event.date.split(',')[0]}\n                      </span>\n                      <span className={`px-3 py-1 rounded text-sm font-semibold capitalize ${\n                        event.category === 'cultural' ? 'bg-purple-500/20 text-purple-400' :\n                        event.category === 'religious' ? 'bg-blue-500/20 text-blue-400' :\n                        'bg-green-500/20 text-green-400'\n                      }`}>\n                        {event.category}\n                      </span>\n                    </div>\n                    <h4 className=\"text-lg font-semibold mb-2\">{event.name}</h4>\n                    <p className=\"text-muted-foreground mb-3\">{event.description}</p>\n                    <div className=\"flex items-center text-sm text-muted-foreground\">\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      </svg>\n                      <span>{event.location}</span>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n\n          {/* Event Categories Sidebar */}\n          <div>\n            <motion.h3\n              className=\"text-2xl font-semibold mb-6\"\n              initial={{ opacity: 0, x: 30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              Event Categories\n            </motion.h3>\n            <div className=\"space-y-4\">\n              {eventCategories.map((category, index) => (\n                <motion.div\n                  key={category.name}\n                  className=\"bg-card border border-border rounded-lg p-4\"\n                  initial={{ opacity: 0, y: 30 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  whileHover={{ scale: 1.02 }}\n                >\n                  <h4 className=\"font-semibold mb-2\">{category.name}</h4>\n                  <p className=\"text-muted-foreground text-sm mb-2\">Traditional celebrations and cultural events</p>\n                  <div>\n                    <span className={`px-2 py-1 rounded text-xs ${category.color}`}>\n                      {category.count} Events\n                    </span>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n\n            <motion.div\n              className=\"mt-8 bg-primary text-primary-foreground rounded-lg p-6 text-center\"\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.6, delay: 0.5 }}\n            >\n              <svg className=\"w-8 h-8 mx-auto mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n              <h4 className=\"font-semibold mb-2\">Never Miss an Event</h4>\n              <p className=\"text-sm mb-4\">Subscribe to get notified about upcoming events</p>\n              <button className=\"bg-white text-primary px-4 py-2 rounded-lg font-semibold text-sm hover:bg-gray-100 transition-colors\" data-testid=\"button-subscribe\">\n                Subscribe Now\n              </button>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Event Statistics */}\n        <motion.div\n          className=\"mt-16 grid grid-cols-1 md:grid-cols-4 gap-8\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n        >\n          {[\n            { value: '50+', label: 'Annual Events' },\n            { value: '12', label: 'Major Festivals' },\n            { value: '100K+', label: 'Participants' },\n            { value: '365', label: 'Days of Culture' }\n          ].map((stat, index) => (\n            <motion.div\n              key={stat.label}\n              className=\"text-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"text-3xl font-bold text-primary mb-2\">{stat.value}</div>\n              <div className=\"text-muted-foreground\">{stat.label}</div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9169},"client/src/app/food/page.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\n\nconst foods = [\n  {\n    id: 1,\n    name: 'Poha Jalebi',\n    description: 'Indore\\'s iconic breakfast combination - fluffed rice with crispy, sweet jalebis.',\n    category: 'breakfast',\n    imageUrl: 'https://images.unsplash.com/photo-1626132647523-66f5bf380027?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹30-50',\n    rating: 5\n  },\n  {\n    id: 2,\n    name: 'Indori Samosa',\n    description: 'Perfectly spiced and crispy samosas served with tangy tamarind and mint chutneys.',\n    category: 'snacks',\n    imageUrl: 'https://images.unsplash.com/photo-1601050690597-df0568f70950?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹15-25',\n    rating: 4\n  },\n  {\n    id: 3,\n    name: 'Garadu',\n    description: 'Deep-fried yam pieces tossed in spices - a unique and beloved Indore street food specialty.',\n    category: 'snacks',\n    imageUrl: 'https://images.unsplash.com/photo-1606491956689-2ea866880c84?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹25-40',\n    rating: 4\n  },\n  {\n    id: 4,\n    name: 'Malpua',\n    description: 'Traditional sweet pancakes served with thick rabri and dry fruits, perfect for festivals.',\n    category: 'sweets',\n    imageUrl: 'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹60-80',\n    rating: 4\n  },\n  {\n    id: 5,\n    name: 'Dal Bafla',\n    description: 'A hearty meal of steamed and baked wheat dumplings served with rich dal and ghee.',\n    category: 'dinner',\n    imageUrl: 'https://images.unsplash.com/photo-1585937421612-70a008356fbe?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹120-180',\n    rating: 5\n  },\n  {\n    id: 6,\n    name: 'Khasta Kachori',\n    description: 'Flaky, crispy kachoris stuffed with spiced dal, served with aloo sabzi and chutneys.',\n    category: 'breakfast',\n    imageUrl: 'https://images.unsplash.com/photo-1599043513900-ed6fe01d3833?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹25-35',\n    rating: 4\n  }\n];\n\nconst categories = ['all', 'breakfast', 'snacks', 'sweets', 'dinner'];\n\nexport default function FoodPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  const filteredFoods = selectedCategory === 'all' \n    ? foods \n    : foods.filter(food => food.category === selectedCategory);\n\n  const renderStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <span key={i} className={`text-sm ${i < rating ? 'text-yellow-500' : 'text-gray-400'}`}>\n        ★\n      </span>\n    ));\n  };\n\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">Food & Cuisine</h1>\n          <p className=\"text-muted-foreground text-lg\">Experience Indore's legendary food culture - from morning poha-jalebi to late-night street food adventures</p>\n        </motion.div>\n        \n        {/* Food Categories */}\n        <motion.div\n          className=\"flex flex-wrap justify-center mb-12 gap-2\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => setSelectedCategory(category)}\n              className={`px-6 py-3 rounded-lg font-semibold transition-colors ${\n                selectedCategory === category\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-card text-foreground hover:bg-muted'\n              }`}\n              data-testid={`filter-${category}`}\n            >\n              {category.charAt(0).toUpperCase() + category.slice(1)}\n            </button>\n          ))}\n        </motion.div>\n        \n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n          layout\n        >\n          {filteredFoods.map((food, index) => (\n            <motion.div\n              key={food.id}\n              layout\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              whileHover={{ y: -8 }}\n              className=\"bg-card border border-border rounded-lg overflow-hidden card-hover\"\n              data-testid={`food-${food.id}`}\n            >\n              <div className=\"relative h-48\">\n                <Image\n                  src={food.imageUrl}\n                  alt={food.name}\n                  fill\n                  className=\"object-cover\"\n                />\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-semibold mb-2\">{food.name}</h3>\n                <p className=\"text-muted-foreground mb-4\">{food.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm text-primary font-medium capitalize bg-primary/20 px-3 py-1 rounded-full\">\n                      {food.category}\n                    </span>\n                    <div className=\"flex\">{renderStars(food.rating)}</div>\n                  </div>\n                  <span className=\"text-primary font-semibold\">{food.priceRange}</span>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Food Culture Section */}\n        <motion.div\n          className=\"mt-20 bg-secondary rounded-2xl p-8\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n        >\n          <div className=\"text-center mb-8\">\n            <h3 className=\"text-2xl font-bold text-foreground mb-4\">Indore Food Culture</h3>\n            <p className=\"text-muted-foreground\">Discover the stories behind Indore's legendary food scene</p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: '🕒',\n                title: '24/7 Food Scene',\n                description: 'From early morning poha to midnight chaat, Indore never sleeps when it comes to food.'\n              },\n              {\n                icon: '❤️',\n                title: 'Food Capital',\n                description: 'Recognized as India\\'s food capital with the highest concentration of food joints per capita.'\n              },\n              {\n                icon: '⭐',\n                title: 'Unique Flavors',\n                description: 'Distinct taste profiles that you won\\'t find anywhere else in India.'\n              }\n            ].map((item, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"text-3xl mb-4\">{item.icon}</div>\n                <h4 className=\"text-lg font-semibold text-foreground mb-2\">{item.title}</h4>\n                <p className=\"text-muted-foreground\">{item.description}</p>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7796},"client/src/app/gallery/page.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\nimport Lightbox from '@/components/ui/lightbox';\n\nconst galleryImages = [\n  {\n    id: 1,\n    src: 'https://images.unsplash.com/photo-1582510003544-4d00b7f74220?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=500',\n    alt: 'Rajwada Palace at Night',\n    category: 'historical'\n  },\n  {\n    id: 2,\n    src: 'https://images.unsplash.com/photo-1606491956689-2ea866880c84?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300',\n    alt: 'Indore Street Food',\n    category: 'food'\n  },\n  {\n    id: 3,\n    src: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=350',\n    alt: 'Cultural Festival Dance',\n    category: 'events'\n  },\n  {\n    id: 4,\n    src: 'https://images.unsplash.com/photo-1534050359320-02900022671e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=600',\n    alt: 'Lal Bagh Palace Interior',\n    category: 'historical'\n  },\n  {\n    id: 5,\n    src: 'https://images.unsplash.com/photo-1532777946373-b6783242f211?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=600',\n    alt: 'Kanch Mandir Glass Temple',\n    category: 'historical'\n  },\n  {\n    id: 6,\n    src: 'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=350',\n    alt: 'Traditional Sweets',\n    category: 'food'\n  },\n  {\n    id: 7,\n    src: 'https://images.unsplash.com/photo-1441974231531-c6227db76b6e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n    alt: 'Indore Gardens and Nature',\n    category: 'nature'\n  },\n  {\n    id: 8,\n    src: 'https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=550',\n    alt: 'Ganesh Festival Celebration',\n    category: 'events'\n  },\n  {\n    id: 9,\n    src: 'https://images.unsplash.com/photo-1570939274717-7eda259b50ed?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=350',\n    alt: 'Indore Cityscape Panorama',\n    category: 'modern'\n  },\n  {\n    id: 10,\n    src: 'https://images.unsplash.com/photo-1626132647523-66f5bf380027?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=450',\n    alt: 'Poha Jalebi Traditional Breakfast',\n    category: 'food'\n  }\n];\n\nconst categories = ['all', 'historical', 'food', 'events', 'nature', 'modern'];\n\nexport default function GalleryPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [lightboxImage, setLightboxImage] = useState<{ url: string; alt: string } | null>(null);\n\n  const filteredImages = selectedCategory === 'all' \n    ? galleryImages \n    : galleryImages.filter(image => image.category === selectedCategory);\n\n  const openLightbox = (imageUrl: string, imageAlt: string) => {\n    setLightboxImage({ url: imageUrl, alt: imageAlt });\n  };\n\n  const closeLightbox = () => {\n    setLightboxImage(null);\n  };\n\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">Photo Gallery</h1>\n          <p className=\"text-muted-foreground text-lg\">Explore Indore through captivating images showcasing the city's beauty, culture, and heritage</p>\n        </motion.div>\n        \n        {/* Gallery Categories */}\n        <motion.div\n          className=\"flex flex-wrap justify-center mb-12 gap-2\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => setSelectedCategory(category)}\n              className={`px-6 py-3 rounded-lg font-semibold transition-colors ${\n                selectedCategory === category\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-card text-foreground hover:bg-muted'\n              }`}\n              data-testid={`filter-${category}`}\n            >\n              {category.charAt(0).toUpperCase() + category.slice(1)}\n            </button>\n          ))}\n        </motion.div>\n        \n        {/* Masonry Gallery Grid */}\n        <motion.div\n          className=\"masonry-grid\"\n          layout\n        >\n          {filteredImages.map((image, index) => (\n            <motion.div\n              key={image.id}\n              className=\"masonry-item cursor-pointer\"\n              layout\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              whileHover={{ scale: 1.05 }}\n              onClick={() => openLightbox(image.src, image.alt)}\n              data-testid={`gallery-image-${image.id}`}\n            >\n              <div className=\"relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-shadow\">\n                <Image\n                  src={image.src}\n                  alt={image.alt}\n                  width={400}\n                  height={300}\n                  className=\"w-full h-auto object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-black/0 hover:bg-black/20 transition-colors duration-300 flex items-center justify-center\">\n                  <svg className=\"w-8 h-8 text-white opacity-0 hover:opacity-100 transition-opacity\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7\" />\n                  </svg>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Load More Button */}\n        <motion.div\n          className=\"text-center mt-12\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n        >\n          <button className=\"bg-primary hover:bg-primary/90 text-primary-foreground px-8 py-3 rounded-lg font-semibold transition-colors\" data-testid=\"button-load-more\">\n            Load More Photos\n          </button>\n        </motion.div>\n\n        {/* Lightbox */}\n        <Lightbox\n          isOpen={!!lightboxImage}\n          imageUrl={lightboxImage?.url || ''}\n          imageAlt={lightboxImage?.alt || ''}\n          onClose={closeLightbox}\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":6595},"client/src/app/news/page.tsx":{"content":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\nimport { NewsArticle } from '@/lib/types';\n\nconst categories = ['all', 'city', 'culture', 'travel', 'development'];\n\nexport default function NewsPage() {\n  const [articles, setArticles] = useState<NewsArticle[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  useEffect(() => {\n    async function fetchNews() {\n      try {\n        const response = await fetch('/api/news');\n        if (!response.ok) {\n          throw new Error('Failed to fetch news data');\n        }\n        const data = await response.json();\n        setArticles(data);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load news');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchNews();\n  }, []);\n\n  const formatDate = (dateString: string) => {\n    const now = new Date();\n    const publishedDate = new Date(dateString);\n    const diffTime = Math.abs(now.getTime() - publishedDate.getTime());\n    const diffHours = Math.ceil(diffTime / (1000 * 60 * 60));\n\n    if (diffHours < 24) {\n      return `${diffHours} hours ago`;\n    } else if (diffHours < 48) {\n      return '1 day ago';\n    } else {\n      return `${Math.floor(diffHours / 24)} days ago`;\n    }\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'city': 'bg-blue-500/20 text-blue-400',\n      'culture': 'bg-purple-500/20 text-purple-400',\n      'travel': 'bg-green-500/20 text-green-400',\n      'development': 'bg-orange-500/20 text-orange-400',\n      'general': 'bg-gray-500/20 text-gray-400'\n    };\n    return colors[category] || colors.general;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"py-20 flex items-center justify-center min-h-96\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">Loading latest news...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">Latest News</h1>\n          <p className=\"text-muted-foreground text-lg\">Stay updated with the latest happenings in Indore</p>\n        </motion.div>\n        \n        {/* News Categories */}\n        <motion.div\n          className=\"flex flex-wrap justify-center mb-12 gap-2\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => setSelectedCategory(category)}\n              className={`px-6 py-3 rounded-lg font-semibold transition-colors ${\n                selectedCategory === category\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-card text-foreground hover:bg-muted'\n              }`}\n              data-testid={`filter-${category}`}\n            >\n              {category.charAt(0).toUpperCase() + category.slice(1)} News\n            </button>\n          ))}\n        </motion.div>\n        \n        {error ? (\n          <div className=\"text-center bg-destructive/10 border border-destructive/20 rounded-lg p-6 max-w-md mx-auto\">\n            <p className=\"text-destructive mb-2\">Unable to load news articles</p>\n            <p className=\"text-sm text-muted-foreground\">{error}</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Featured News */}\n            <div className=\"lg:col-span-2 space-y-8\">\n              {articles.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <svg className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-2-2h-1m-4 0V5a2 2 0 00-2-2H9a2 2 0 00-2 2v14a2 2 0 002 2h2\" />\n                  </svg>\n                  <h3 className=\"text-lg font-semibold mb-2\">No News Available</h3>\n                  <p className=\"text-muted-foreground\">Unable to fetch news articles at the moment. Please check your API configuration.</p>\n                </div>\n              ) : (\n                articles.slice(0, 6).map((article, index) => (\n                  <motion.article\n                    key={article.id}\n                    className=\"bg-card border border-border rounded-lg overflow-hidden card-hover\"\n                    initial={{ opacity: 0, y: 50 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6, delay: index * 0.1 }}\n                    whileHover={{ y: -4 }}\n                    data-testid={`article-${index}`}\n                  >\n                    {article.urlToImage && (\n                      <div className=\"relative h-48\">\n                        <Image\n                          src={article.urlToImage}\n                          alt={article.title}\n                          fill\n                          className=\"object-cover\"\n                        />\n                      </div>\n                    )}\n                    <div className=\"p-6\">\n                      <div className=\"flex items-center gap-3 mb-3\">\n                        <span className={`px-3 py-1 rounded text-sm font-semibold ${getCategoryColor(article.category)}`}>\n                          {article.category.charAt(0).toUpperCase() + article.category.slice(1)}\n                        </span>\n                        <span className=\"text-muted-foreground text-sm\">\n                          {formatDate(article.publishedAt)}\n                        </span>\n                      </div>\n                      <h3 className=\"text-xl font-semibold mb-3\">{article.title}</h3>\n                      <p className=\"text-muted-foreground mb-4 line-clamp-3\">{article.description}</p>\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">By {article.author}</span>\n                        <a\n                          href={article.url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"text-primary hover:underline font-semibold\"\n                          data-testid={`link-read-more-${index}`}\n                        >\n                          Read More →\n                        </a>\n                      </div>\n                    </div>\n                  </motion.article>\n                ))\n              )}\n            </div>\n\n            {/* News Sidebar */}\n            <div className=\"space-y-6\">\n              <motion.div\n                className=\"bg-card border border-border rounded-lg p-6\"\n                initial={{ opacity: 0, x: 30 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.3 }}\n              >\n                <h3 className=\"text-lg font-semibold mb-4\">Trending Topics</h3>\n                <div className=\"space-y-3\">\n                  {[\n                    '#IndoreSmartCity',\n                    '#CleanIndore',\n                    '#IndoreMetro',\n                    '#IndoreFoodFestival',\n                    '#AhilyaUtsav'\n                  ].map((topic, index) => (\n                    <a\n                      key={topic}\n                      href=\"#\"\n                      className=\"block text-sm hover:text-primary transition-colors\"\n                      data-testid={`trending-${index}`}\n                    >\n                      {topic}\n                    </a>\n                  ))}\n                </div>\n              </motion.div>\n\n              <motion.div\n                className=\"bg-card border border-border rounded-lg p-6\"\n                initial={{ opacity: 0, x: 30 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.4 }}\n              >\n                <h3 className=\"text-lg font-semibold mb-4\">Quick Updates</h3>\n                <div className=\"space-y-4\">\n                  {[\n                    { title: 'New Food Court Opens at Phoenix Mall', time: '3 hours ago' },\n                    { title: 'Indore Wins Cleanest City Award Again', time: '6 hours ago' },\n                    { title: 'Traffic Updates: New Route via Ring Road', time: '8 hours ago' },\n                    { title: 'Weather Alert: Moderate Rainfall Expected', time: '12 hours ago' }\n                  ].map((update, index) => (\n                    <div key={index} className=\"border-l-2 border-primary pl-3\" data-testid={`update-${index}`}>\n                      <p className=\"text-sm font-medium\">{update.title}</p>\n                      <p className=\"text-xs text-muted-foreground\">{update.time}</p>\n                    </div>\n                  ))}\n                </div>\n              </motion.div>\n\n              <motion.div\n                className=\"bg-primary text-primary-foreground rounded-lg p-6 text-center\"\n                initial={{ opacity: 0, scale: 0.9 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: 0.5 }}\n              >\n                <svg className=\"w-8 h-8 mx-auto mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-1\" />\n                </svg>\n                <h3 className=\"text-lg font-semibold mb-2\">Stay Updated</h3>\n                <p className=\"text-sm mb-4\">Get the latest Indore news delivered to your inbox</p>\n                <button className=\"bg-white text-primary px-4 py-2 rounded-lg font-semibold text-sm hover:bg-gray-100 transition-colors\" data-testid=\"button-subscribe-news\">\n                  Subscribe\n                </button>\n              </motion.div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":10687},"client/src/app/places/page.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\n\nconst places = [\n  {\n    id: 1,\n    name: 'Rajwada Palace',\n    description: 'A seven-story palace of the Holkar dynasty, showcasing magnificent Maratha architecture and Indo-Saracenic style.',\n    category: 'historical',\n    imageUrl: 'https://images.unsplash.com/photo-1609920658906-8223bd289001?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Central Indore'\n  },\n  {\n    id: 2,\n    name: 'Lal Bagh Palace',\n    description: 'An opulent palace built by the Holkar rulers, featuring European architecture and luxurious interiors.',\n    category: 'historical',\n    imageUrl: 'https://images.unsplash.com/photo-1534050359320-02900022671e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Lal Bagh'\n  },\n  {\n    id: 3,\n    name: 'Sarafa Bazaar',\n    description: 'The famous night food market where jewelry shops transform into street food paradise after dark.',\n    category: 'modern',\n    imageUrl: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Sarafa Bazaar'\n  },\n  {\n    id: 4,\n    name: 'Kanch Mandir',\n    description: 'A magnificent Jain temple made entirely of glass and mirrors, creating a dazzling spiritual experience.',\n    category: 'religious',\n    imageUrl: 'https://images.unsplash.com/photo-1532777946373-b6783242f211?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Itwaria Bazaar'\n  },\n  {\n    id: 5,\n    name: 'Patalpani Waterfall',\n    description: 'A scenic waterfall near Indore, perfect for trekking and experiencing nature\\'s beauty during monsoons.',\n    category: 'nature',\n    imageUrl: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: '35km from Indore'\n  },\n  {\n    id: 6,\n    name: 'Central Museum',\n    description: 'Houses rare artifacts, sculptures, and archaeological findings showcasing the region\\'s rich history.',\n    category: 'historical',\n    imageUrl: 'https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'A.B. Road'\n  }\n];\n\nconst categories = ['all', 'historical', 'religious', 'modern', 'nature'];\n\nexport default function PlacesPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  const filteredPlaces = selectedCategory === 'all' \n    ? places \n    : places.filter(place => place.category === selectedCategory);\n\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">Places to Visit</h1>\n          <p className=\"text-muted-foreground text-lg\">Discover Indore's most iconic attractions and hidden gems</p>\n        </motion.div>\n        \n        {/* Filter Tabs */}\n        <motion.div\n          className=\"flex flex-wrap justify-center mb-12 gap-2\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => setSelectedCategory(category)}\n              className={`px-6 py-3 rounded-lg font-semibold transition-colors ${\n                selectedCategory === category\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-card text-foreground hover:bg-muted'\n              }`}\n              data-testid={`filter-${category}`}\n            >\n              {category.charAt(0).toUpperCase() + category.slice(1)}\n            </button>\n          ))}\n        </motion.div>\n        \n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n          layout\n        >\n          {filteredPlaces.map((place, index) => (\n            <motion.div\n              key={place.id}\n              layout\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              whileHover={{ y: -8 }}\n              className=\"bg-card border border-border rounded-lg overflow-hidden card-hover\"\n              data-testid={`place-${place.id}`}\n            >\n              <div className=\"relative h-48\">\n                <Image\n                  src={place.imageUrl}\n                  alt={place.name}\n                  fill\n                  className=\"object-cover\"\n                />\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-semibold mb-2\">{place.name}</h3>\n                <p className=\"text-muted-foreground mb-4\">{place.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-primary font-medium capitalize bg-primary/20 px-3 py-1 rounded-full\">\n                    {place.category}\n                  </span>\n                  <button className=\"text-primary hover:underline font-semibold\" data-testid={`button-map-${place.id}`}>\n                    View on Maps →\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5572},"client/src/app/weather/page.tsx":{"content":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { WeatherData } from '@/lib/types';\n\nexport default function WeatherPage() {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchWeather() {\n      try {\n        const response = await fetch('/api/weather');\n        if (!response.ok) {\n          throw new Error('Failed to fetch weather data');\n        }\n        const data = await response.json();\n        setWeatherData(data);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load weather data');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchWeather();\n  }, []);\n\n  const getWeatherIcon = (condition: string) => {\n    const icons: Record<string, string> = {\n      'Clear': '☀️',\n      'Clouds': '☁️',\n      'Rain': '🌧️',\n      'Drizzle': '🌦️',\n      'Thunderstorm': '⛈️',\n      'Snow': '🌨️',\n      'Mist': '🌫️',\n      'Sunny': '☀️',\n      'Partly Cloudy': '⛅',\n      'Cloudy': '☁️',\n      'Light Rain': '🌦️',\n      'Overcast': '☁️',\n      'Hot': '🌡️'\n    };\n    return icons[condition] || '🌤️';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"py-20 flex items-center justify-center min-h-96\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">Loading weather data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold mb-4\">Weather in Indore</h1>\n            <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-6 max-w-md mx-auto\">\n              <p className=\"text-destructive\">Unable to load weather data. Please try again later.</p>\n              <p className=\"text-sm text-muted-foreground mt-2\">{error}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-20\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <h1 className=\"text-4xl font-bold mb-4\">Weather in Indore</h1>\n          <p className=\"text-muted-foreground text-lg\">Current weather conditions and forecast for planning your visit</p>\n        </motion.div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n          {/* Current Weather */}\n          <motion.div\n            className=\"bg-card border border-border rounded-lg p-8 text-center\"\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"mb-6\">\n              <div className=\"text-6xl mb-4\">{getWeatherIcon(weatherData?.condition || 'Clear')}</div>\n              <h3 className=\"text-3xl font-bold mb-2\" data-testid=\"current-temperature\">\n                {weatherData?.temperature || 28}°C\n              </h3>\n              <p className=\"text-muted-foreground\" data-testid=\"current-condition\">\n                {weatherData?.condition || 'Partly Cloudy'}\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div className=\"bg-secondary border border-border rounded-lg p-4\">\n                <svg className=\"w-5 h-5 text-primary mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                </svg>\n                <p className=\"text-muted-foreground\">Visibility</p>\n                <p className=\"font-semibold\" data-testid=\"visibility\">\n                  {weatherData?.visibility || 10} km\n                </p>\n              </div>\n              <div className=\"bg-secondary border border-border rounded-lg p-4\">\n                <svg className=\"w-5 h-5 text-primary mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 7.172V5L8 4z\" />\n                </svg>\n                <p className=\"text-muted-foreground\">Humidity</p>\n                <p className=\"font-semibold\" data-testid=\"humidity\">\n                  {weatherData?.humidity || 65}%\n                </p>\n              </div>\n              <div className=\"bg-secondary border border-border rounded-lg p-4\">\n                <svg className=\"w-5 h-5 text-primary mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 10v6a1 1 0 001 1h8a1 1 0 001-1v-6M7 14h10\" />\n                </svg>\n                <p className=\"text-muted-foreground\">Wind Speed</p>\n                <p className=\"font-semibold\" data-testid=\"wind-speed\">\n                  {weatherData?.windSpeed || 12} km/h\n                </p>\n              </div>\n              <div className=\"bg-secondary border border-border rounded-lg p-4\">\n                <svg className=\"w-5 h-5 text-primary mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                <p className=\"text-muted-foreground\">Feels Like</p>\n                <p className=\"font-semibold\" data-testid=\"feels-like\">\n                  {weatherData?.feelsLike || 31}°C\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* 7-Day Forecast */}\n          <motion.div\n            className=\"bg-card border border-border rounded-lg p-8\"\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <h3 className=\"text-xl font-semibold mb-6\">7-Day Forecast</h3>\n            <div className=\"space-y-4\">\n              {(weatherData?.forecast || [\n                { day: 'Today', icon: '01d', condition: 'Sunny', high: 32, low: 24 },\n                { day: 'Tomorrow', icon: '02d', condition: 'Cloudy', high: 29, low: 22 },\n                { day: 'Friday', icon: '10d', condition: 'Light Rain', high: 26, low: 20 },\n                { day: 'Saturday', icon: '01d', condition: 'Sunny', high: 31, low: 23 },\n                { day: 'Sunday', icon: '02d', condition: 'Partly Sunny', high: 30, low: 22 },\n                { day: 'Monday', icon: '03d', condition: 'Overcast', high: 28, low: 21 },\n                { day: 'Tuesday', icon: '01d', condition: 'Sunny', high: 33, low: 25 }\n              ]).map((day, index) => (\n                <motion.div\n                  key={day.day}\n                  className=\"flex items-center justify-between py-2 border-b border-border last:border-b-0\"\n                  initial={{ opacity: 0, x: 30 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  data-testid={`forecast-${index}`}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <span className=\"text-2xl\">{getWeatherIcon(day.condition)}</span>\n                    <span className=\"font-medium\">{day.day}</span>\n                  </div>\n                  <div className=\"flex items-center gap-4\">\n                    <span className=\"text-muted-foreground\">{day.condition}</span>\n                    <div className=\"text-right\">\n                      <span className=\"font-semibold\">{day.high}°</span>\n                      <span className=\"text-muted-foreground ml-2\">{day.low}°</span>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n        \n        {/* Weather Tips */}\n        <motion.div\n          className=\"mt-12 bg-primary/10 border border-primary/20 rounded-lg p-6 max-w-2xl mx-auto text-center\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n        >\n          <svg className=\"w-8 h-8 text-primary mx-auto mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n          <h3 className=\"text-lg font-semibold mb-2\">Weather Tips</h3>\n          <p className=\"text-muted-foreground\">Perfect weather for exploring Indore's outdoor attractions! Don't forget to stay hydrated and carry sunscreen.</p>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10088},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/footer.tsx":{"content":"import Link from 'next/link';\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-secondary text-secondary-foreground py-16\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Brand */}\n          <div>\n            <div className=\"flex items-center space-x-2 mb-6\">\n              <svg className=\"w-6 h-6 text-primary\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"text-xl font-bold\">All About Indore</span>\n            </div>\n            <p className=\"text-muted-foreground mb-6\">\n              Your comprehensive guide to exploring the Heart of Madhya Pradesh. Discover the rich culture, delicious cuisine, and warm hospitality of India's cleanest city.\n            </p>\n            <div className=\"flex gap-4\">\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-facebook\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-twitter\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-instagram\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.347-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.75-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.012.001z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-youtube\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n          \n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-semibold mb-6\">Quick Links</h3>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/\" className=\"text-muted-foreground hover:text-primary transition-colors\">Home</Link></li>\n              <li><Link href=\"/places\" className=\"text-muted-foreground hover:text-primary transition-colors\">Places to Visit</Link></li>\n              <li><Link href=\"/food\" className=\"text-muted-foreground hover:text-primary transition-colors\">Food & Cuisine</Link></li>\n              <li><Link href=\"/events\" className=\"text-muted-foreground hover:text-primary transition-colors\">Events</Link></li>\n              <li><Link href=\"/weather\" className=\"text-muted-foreground hover:text-primary transition-colors\">Weather</Link></li>\n              <li><Link href=\"/gallery\" className=\"text-muted-foreground hover:text-primary transition-colors\">Gallery</Link></li>\n            </ul>\n          </div>\n          \n          {/* Information */}\n          <div>\n            <h3 className=\"font-semibold mb-6\">Information</h3>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/about\" className=\"text-muted-foreground hover:text-primary transition-colors\">About Indore</Link></li>\n              <li><Link href=\"/news\" className=\"text-muted-foreground hover:text-primary transition-colors\">Latest News</Link></li>\n              <li><Link href=\"/contact\" className=\"text-muted-foreground hover:text-primary transition-colors\">Contact Us</Link></li>\n              <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\">Privacy Policy</a></li>\n              <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\">Terms of Service</a></li>\n              <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\">Sitemap</a></li>\n            </ul>\n          </div>\n          \n          {/* Contact Info */}\n          <div>\n            <h3 className=\"font-semibold mb-6\">Contact Info</h3>\n            <div className=\"space-y-4 text-muted-foreground\">\n              <div className=\"flex items-start gap-3\">\n                <svg className=\"w-5 h-5 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                <div>\n                  <p>Tourism Office, Rajwada</p>\n                  <p>Indore, MP 452007</p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-5 h-5 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                </svg>\n                <p>+91 731 2XX XXXX</p>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-5 h-5 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                <p>info@allaboutindore.com</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Bottom Footer */}\n        <div className=\"border-t border-border mt-12 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-muted-foreground text-sm\">\n            © 2024 All About Indore. All rights reserved.\n          </p>\n          <div className=\"flex items-center gap-6 mt-4 md:mt-0 text-sm\">\n            <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\">Privacy</a>\n            <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\">Terms</a>\n            <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\">Cookies</a>\n            <span className=\"text-muted-foreground\">Made with ❤️ for Indore</span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":9042},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hero.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Link } from 'wouter';\n\nexport default function Hero() {\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n      <div className=\"absolute inset-0\">\n        <img\n          src=\"https://images.unsplash.com/photo-1570168007204-dfb528c6958f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200\"\n          alt=\"Panoramic view of Indore cityscape\"\n          className=\"object-cover w-full h-full\"\n        />\n        <div className=\"absolute inset-0 hero-gradient\"></div>\n      </div>\n      \n      <motion.div\n        className=\"relative z-10 text-center px-4 max-w-4xl mx-auto\"\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.8 }}\n      >\n        <motion.h1\n          className=\"text-5xl md:text-7xl font-bold mb-6 text-white\"\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 1, delay: 0.2 }}\n        >\n          Welcome to Indore\n          <motion.span\n            className=\"text-primary block text-3xl md:text-5xl mt-2\"\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.5 }}\n          >\n            Heart of Madhya Pradesh\n          </motion.span>\n        </motion.h1>\n        \n        <motion.p\n          className=\"text-xl md:text-2xl mb-8 text-gray-200 max-w-2xl mx-auto\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.7 }}\n        >\n          Discover the rich heritage, vibrant culture, and delicious cuisine of India's cleanest city\n        </motion.p>\n        \n        <motion.div\n          className=\"flex flex-col sm:flex-row gap-4 justify-center\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.9 }}\n        >\n          <Link\n            href=\"/places\"\n            className=\"bg-primary hover:bg-primary/90 text-primary-foreground px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105\"\n            data-testid=\"button-explore\"\n          >\n            Explore More\n          </Link>\n          <Link\n            href=\"/events\"\n            className=\"bg-transparent border-2 border-white text-white hover:bg-white hover:text-background px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300\"\n            data-testid=\"button-plan-trip\"\n          >\n            Plan Your Trip\n          </Link>\n        </motion.div>\n      </motion.div>\n      \n      {/* Scroll Indicator */}\n      <motion.div\n        className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2\"\n        animate={{ y: [0, 10, 0] }}\n        transition={{ duration: 2, repeat: Infinity }}\n      >\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\n        </svg>\n      </motion.div>\n    </section>\n  );\n}\n","size_bytes":3193},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/lightbox.tsx":{"content":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Image from 'next/image';\n\ninterface LightboxProps {\n  isOpen: boolean;\n  imageUrl: string;\n  imageAlt: string;\n  onClose: () => void;\n}\n\nexport default function Lightbox({ isOpen, imageUrl, imageAlt, onClose }: LightboxProps) {\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          onClick={onClose}\n          data-testid=\"lightbox-overlay\"\n        >\n          <motion.div\n            className=\"relative max-w-4xl max-h-full\"\n            initial={{ scale: 0.8, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.8, opacity: 0 }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <Image\n              src={imageUrl}\n              alt={imageAlt}\n              width={800}\n              height={600}\n              className=\"max-w-full max-h-full object-contain rounded-lg\"\n              data-testid=\"lightbox-image\"\n            />\n            <button\n              onClick={onClose}\n              className=\"absolute top-4 right-4 text-white hover:text-gray-300 text-2xl\"\n              data-testid=\"button-close-lightbox\"\n            >\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}\n","size_bytes":2207},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/navigation.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nconst navItems = [\n  { name: 'Home', href: '/' },\n  { name: 'Places', href: '/places' },\n  { name: 'Food', href: '/food' },\n  { name: 'Events', href: '/events' },\n  { name: 'Weather', href: '/weather' },\n  { name: 'News', href: '/news' },\n  { name: 'Gallery', href: '/gallery' },\n  { name: 'About', href: '/about' },\n  { name: 'Contact', href: '/contact' },\n];\n\nexport default function Navigation() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const pathname = usePathname();\n\n  return (\n    <nav className=\"fixed top-0 left-0 right-0 z-50 bg-background/80 nav-blur border-b border-border\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <div className=\"flex items-center justify-between h-16\">\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <svg className=\"w-6 h-6 text-primary\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"text-xl font-bold\">All About Indore</span>\n          </Link>\n          \n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={`text-foreground hover:text-primary transition-colors ${\n                  pathname === item.href ? 'text-primary' : ''\n                }`}\n              >\n                {item.name}\n              </Link>\n            ))}\n          </div>\n          \n          {/* Search Bar */}\n          <div className=\"hidden lg:flex items-center\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                className=\"bg-card border border-border rounded-lg px-4 py-2 pr-10 text-sm focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n              <svg className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\n              </svg>\n            </div>\n          </div>\n          \n          {/* Mobile Menu Button */}\n          <button\n            className=\"md:hidden\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            data-testid=\"button-mobile-menu\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            </svg>\n          </button>\n        </div>\n        \n        {/* Mobile Navigation */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden border-t border-border\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={`block px-3 py-2 text-foreground hover:text-primary ${\n                    pathname === item.href ? 'text-primary' : ''\n                  }`}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  {item.name}\n                </Link>\n              ))}\n              <div className=\"px-3 py-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-card border border-border rounded-lg px-4 py-2 text-sm focus:ring-2 focus:ring-primary focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n","size_bytes":4157},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/app/api/contact/route.ts":{"content":"import { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { firstName, lastName, email, subject, message } = body;\n    \n    // Validate required fields\n    if (!firstName || !lastName || !email || !subject || !message) {\n      return NextResponse.json(\n        { error: 'All fields are required' },\n        { status: 400 }\n      );\n    }\n    \n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      return NextResponse.json(\n        { error: 'Invalid email format' },\n        { status: 400 }\n      );\n    }\n    \n    // Here you would typically:\n    // 1. Send email using a service like Formspree, Nodemailer, or SendGrid\n    // 2. Store the message in a database\n    // 3. Send notifications to administrators\n    \n    // For demonstration, we'll use Formspree integration\n    const formspreeEndpoint = process.env.FORMSPREE_ENDPOINT || process.env.NEXT_PUBLIC_FORMSPREE_ENDPOINT;\n    \n    if (formspreeEndpoint) {\n      const formspreeResponse = await fetch(formspreeEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: `${firstName} ${lastName}`,\n          email,\n          subject,\n          message,\n          _replyto: email,\n          _subject: `Contact Form: ${subject}`,\n        }),\n      });\n      \n      if (!formspreeResponse.ok) {\n        throw new Error('Failed to send via Formspree');\n      }\n    } else {\n      // Log the contact form submission if no external service is configured\n      console.log('Contact form submission:', {\n        name: `${firstName} ${lastName}`,\n        email,\n        subject,\n        message,\n        timestamp: new Date().toISOString()\n      });\n    }\n    \n    return NextResponse.json(\n      { message: 'Message sent successfully' },\n      { status: 200 }\n    );\n  } catch (error) {\n    console.error('Contact form error:', error);\n    return NextResponse.json(\n      { error: 'Failed to send message' },\n      { status: 500 }\n    );\n  }\n}\n","size_bytes":2169},"client/src/app/api/news/route.ts":{"content":"import { NextResponse } from 'next/server';\nimport { getNewsData } from '@/lib/api';\n\nexport async function GET() {\n  try {\n    const newsData = await getNewsData();\n    \n    return NextResponse.json(newsData);\n  } catch (error) {\n    console.error('News API error:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch news data' },\n      { status: 500 }\n    );\n  }\n}\n","size_bytes":387},"client/src/app/api/weather/route.ts":{"content":"import { NextResponse } from 'next/server';\nimport { getWeatherData } from '@/lib/api';\n\nexport async function GET() {\n  try {\n    const weatherData = await getWeatherData();\n    \n    if (!weatherData) {\n      return NextResponse.json(\n        { error: 'Failed to fetch weather data' },\n        { status: 500 }\n      );\n    }\n    \n    return NextResponse.json(weatherData);\n  } catch (error) {\n    console.error('Weather API error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n","size_bytes":549},"client/src/components/Layout.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { useState } from \"react\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { ThemeToggle } from \"@/components/ThemeToggle\";\n\nfunction Navigation() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navItems = [\n    { name: 'Home', href: '/' },\n    { name: 'Places', href: '/places' },\n    { name: 'Food', href: '/food' },\n    { name: 'Events', href: '/events' },\n    { name: 'Weather', href: '/weather' },\n    { name: 'News', href: '/news' },\n    { name: 'Gallery', href: '/gallery' },\n    { name: 'About', href: '/about' },\n    { name: 'Contact', href: '/contact' },\n  ];\n\n  return (\n    <nav className=\"fixed top-0 left-0 right-0 z-50 bg-background/80 nav-blur border-b border-border\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <div className=\"flex items-center justify-between h-16\">\n          <Link href=\"/\" data-testid=\"link-home\" className=\"flex items-center space-x-2\">\n            <svg className=\"w-6 h-6 text-primary\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"text-xl font-bold\">All About Indore</span>\n          </Link>\n          \n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                data-testid={`link-${item.name.toLowerCase()}`}\n                className={`text-foreground hover:text-primary transition-colors ${\n                  location === item.href ? 'text-primary' : ''\n                }`}\n              >\n                {item.name}\n              </Link>\n            ))}\n          </div>\n          \n          {/* Search Bar and Theme Toggle */}\n          <div className=\"hidden lg:flex items-center gap-4\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                data-testid=\"input-search\"\n                className=\"bg-card border border-border rounded-lg px-4 py-2 pr-10 text-sm focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n              <svg \n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground pointer-events-none\"\n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"m21 21-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </div>\n            <ThemeToggle />\n          </div>\n\n          {/* Mobile Theme Toggle and Menu Button */}\n          <div className=\"md:hidden flex items-center gap-2\">\n            <ThemeToggle />\n            <button \n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              data-testid=\"button-mobile-menu\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden py-4 border-t border-border\">\n            <div className=\"flex flex-col space-y-3\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  data-testid={`link-mobile-${item.name.toLowerCase()}`}\n                  className={`text-foreground hover:text-primary transition-colors ${\n                    location === item.href ? 'text-primary' : ''\n                  }`}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nfunction Footer() {\n  return (\n    <footer className=\"bg-secondary text-secondary-foreground py-16\">\n      <div className=\"container mx-auto px-4 lg:px-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Brand */}\n          <div>\n            <div className=\"flex items-center space-x-2 mb-6\">\n              <svg className=\"w-6 h-6 text-primary\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"text-xl font-bold\">All About Indore</span>\n            </div>\n            <p className=\"text-muted-foreground mb-6\">\n              Your comprehensive guide to exploring the Heart of Madhya Pradesh. Discover the rich culture, delicious cuisine, and warm hospitality of India's cleanest city.\n            </p>\n            <div className=\"flex gap-4\">\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-facebook\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-twitter\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-instagram\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987c6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.449 16.988c-1.297 0-2.348-1.051-2.348-2.348c0-1.297 1.051-2.348 2.348-2.348c1.297 0 2.348 1.051 2.348 2.348C10.797 15.937 9.746 16.988 8.449 16.988zM12.017 7.729c-2.209 0-4.002 1.792-4.002 4.002s1.793 4.002 4.002 4.002s4.002-1.793 4.002-4.002S14.226 7.729 12.017 7.729z\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n\n          {/* Explore */}\n          <div>\n            <h3 className=\"font-semibold mb-6\" data-testid=\"text-explore\">Explore</h3>\n            <div className=\"space-y-4\">\n              <Link href=\"/places\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-places\">\n                Historical Places\n              </Link>\n              <Link href=\"/food\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-food\">\n                Food & Cuisine\n              </Link>\n              <Link href=\"/events\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-events\">\n                Events & Festivals\n              </Link>\n              <Link href=\"/gallery\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-gallery\">\n                Photo Gallery\n              </Link>\n            </div>\n          </div>\n\n          {/* Information */}\n          <div>\n            <h3 className=\"font-semibold mb-6\" data-testid=\"text-information\">Information</h3>\n            <div className=\"space-y-4\">\n              <Link href=\"/weather\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-weather\">\n                Weather Updates\n              </Link>\n              <Link href=\"/news\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-news\">\n                Latest News\n              </Link>\n              <Link href=\"/about\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-about\">\n                About Indore\n              </Link>\n              <Link href=\"/contact\" className=\"block text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-contact\">\n                Contact Us\n              </Link>\n            </div>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h3 className=\"font-semibold mb-6\" data-testid=\"text-contact-info\">Contact Info</h3>\n            <div className=\"space-y-4 text-muted-foreground\">\n              <div className=\"flex items-start gap-3\">\n                <svg className=\"w-5 h-5 mt-0.5 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                <div>\n                  <p className=\"font-medium\" data-testid=\"text-address\">Indore, Madhya Pradesh</p>\n                  <p>Heart of India</p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-5 h-5 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                <p data-testid=\"text-email\">info@allaboutindore.com</p>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-5 h-5 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                </svg>\n                <p data-testid=\"text-phone\">+91 731 XXX XXXX</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t border-border mt-12 pt-8 text-center text-muted-foreground\">\n          <p data-testid=\"text-copyright\">\n            © 2024 All About Indore. Celebrating the heritage and culture of Madhya Pradesh's commercial capital.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  title?: string;\n  description?: string;\n}\n\nexport default function Layout({ children, title, description }: LayoutProps) {\n  // Set document title and meta description\n  if (title) {\n    document.title = title.includes('All About Indore') ? title : `${title} | All About Indore`;\n  }\n  \n  if (description) {\n    const metaDesc = document.querySelector('meta[name=\"description\"]');\n    if (metaDesc) {\n      metaDesc.setAttribute('content', description);\n    } else {\n      const meta = document.createElement('meta');\n      meta.name = 'description';\n      meta.content = description;\n      document.head.appendChild(meta);\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      <main className=\"pt-16\">\n        {children}\n      </main>\n      <Footer />\n      <Toaster />\n    </div>\n  );\n}","size_bytes":12868},"replit.md":{"content":"# Overview\n\nThis is a full-stack web application called \"All About Indore\" - a comprehensive multi-page responsive website showcasing the culture, attractions, cuisine, events, and information about Indore, the heart of Madhya Pradesh. The application is built as a modern tourism and city information portal featuring real-time weather data, news updates, and extensive content about places to visit, local food, events, and a photo gallery.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **React with TypeScript**: Single-page application using functional components and hooks\n- **Wouter**: Lightweight client-side routing library for navigation\n- **Vite**: Modern build tool for fast development and optimized production builds\n- **Tailwind CSS + shadcn/ui**: Utility-first styling with pre-built component library\n- **Framer Motion**: Animation library for smooth page transitions and interactive effects\n- **TanStack Query**: Data fetching and caching for API requests\n\n## Backend Architecture\n- **Express.js**: Node.js web server framework handling API routes and serving static files\n- **TypeScript**: Full-stack type safety with shared schemas\n- **Development Mode**: Vite middleware integration for hot module replacement\n- **Production Mode**: Static file serving with optimized builds\n\n## Data Storage Solutions\n- **PostgreSQL**: Primary database using Neon serverless PostgreSQL\n- **Drizzle ORM**: Type-safe database operations with schema migrations\n- **In-Memory Storage**: Fallback storage implementation for development/testing\n- **Session Storage**: PostgreSQL-backed session management using connect-pg-simple\n\n## Authentication and Authorization\n- **Session-based Authentication**: Express sessions with PostgreSQL storage\n- **User Management**: Basic user registration and login functionality\n- **Contact Form**: Message storage with validation using Zod schemas\n\n## External Dependencies\n\n### Third-party APIs\n- **OpenWeatherMap API**: Real-time weather data and forecasts for Indore\n- **News API**: Latest news articles related to Indore and surrounding areas\n\n### UI Component Libraries\n- **Radix UI**: Headless components for accessibility and functionality\n- **shadcn/ui**: Pre-styled component system built on Radix UI\n- **Lucide React**: Icon library for consistent iconography\n\n### Database and Cloud Services\n- **Neon Database**: Serverless PostgreSQL hosting\n- **Unsplash**: External image hosting for placeholder content\n\n### Development Tools\n- **Replit Integration**: Development environment optimizations\n- **PostCSS + Autoprefixer**: CSS processing pipeline\n- **Drizzle Kit**: Database migration and schema management tools\n\n### Asset Management\n- **Google Fonts**: Typography (DM Sans, Geist Mono, Architects Daughter)\n- **Image Optimization**: Responsive images with proper loading strategies\n- **PWA Support**: Manifest and service worker capabilities for installable web app","size_bytes":2996},"client/src/components/ThemeProvider.tsx":{"content":"import { ThemeProvider as NextThemesProvider } from \"next-themes\"\n\nexport function ThemeProvider({ \n  children, \n  ...props \n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}","size_bytes":252},"client/src/components/ThemeToggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\"\nimport { useTheme } from \"next-themes\"\nimport { Button } from \"@/components/ui/button\"\nimport { useEffect, useState } from \"react\"\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme()\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  if (!mounted) {\n    return <Button variant=\"outline\" size=\"sm\" className=\"w-9 h-9\"><Sun className=\"h-[1.2rem] w-[1.2rem]\" /></Button>\n  }\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"sm\"\n      onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n      className=\"w-9 h-9\"\n    >\n      <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  )\n}","size_bytes":953},"client/src/pages/About.tsx":{"content":"import { motion } from 'framer-motion';\nimport Layout from '@/components/Layout';\n\nconst timelineEvents = [\n  {\n    year: '1715',\n    title: 'Foundation of Indore',\n    description: 'Rao Nandlal Chaudhary establishes Indore as a trading post on the banks of river Saraswati, marking the beginning of the city\\'s commercial legacy.'\n  },\n  {\n    year: '1733',\n    title: 'Holkar Dynasty Begins',\n    description: 'Malhar Rao Holkar I establishes the Holkar dynasty, transforming Indore into a major power center in Central India.'\n  },\n  {\n    year: '1767-1795',\n    title: 'Ahilya Bai\\'s Golden Era',\n    description: 'Queen Ahilya Bai Holkar\\'s enlightened rule brings prosperity, with extensive temple construction and infrastructure development across the region.'\n  },\n  {\n    year: '1886',\n    title: 'Lal Bagh Palace',\n    description: 'Construction of the magnificent Lal Bagh Palace begins, showcasing European architectural influences and royal grandeur.'\n  },\n  {\n    year: '1947',\n    title: 'Integration with India',\n    description: 'Indore state merges with the Indian Union, marking the beginning of modern democratic governance and rapid development.'\n  },\n  {\n    year: '2016-2022',\n    title: 'Cleanest City Achievement',\n    description: 'Indore wins the title of India\\'s Cleanest City for six consecutive years, setting new standards in urban cleanliness and governance.'\n  }\n];\n\nconst facts = [\n  { icon: '📅', label: 'Founded', value: '1715 AD' },\n  { icon: '👥', label: 'Population', value: '3.2 Million' },\n  { icon: '📍', label: 'Area', value: '530 km²' },\n  { icon: '🗣️', label: 'Languages', value: 'Hindi, English' }\n];\n\nconst culturalSignificance = [\n  {\n    icon: '🍽️',\n    title: 'Food Capital',\n    description: 'Recognized as India\\'s food capital with unique culinary traditions and the highest concentration of food outlets.'\n  },\n  {\n    icon: '🏭',\n    title: 'Commercial Hub',\n    description: 'Major commercial and industrial center contributing significantly to Madhya Pradesh\\'s economy.'\n  },\n  {\n    icon: '🎓',\n    title: 'Educational Center',\n    description: 'Home to prestigious institutions including IIT Indore and AIIMS, making it an important educational hub.'\n  },\n  {\n    icon: '🏛️',\n    title: 'Cultural Heritage',\n    description: 'Rich cultural legacy with magnificent palaces, temples, and monuments reflecting diverse architectural styles.'\n  }\n];\n\nexport default function AboutPage() {\n  return (\n    <Layout \n      title=\"About Indore - History, Culture & Heritage\"\n      description=\"Discover the rich history and cultural heritage of Indore, from its founding in 1715 to becoming India's cleanest city. Learn about Queen Ahilya Bai Holkar's legacy and the city's modern achievements.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          {/* Hero Section */}\n          <motion.div\n            className=\"text-center mb-20\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">About Indore</h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Discover the fascinating story of Indore, from its humble beginnings as a trading post to becoming the commercial capital of Madhya Pradesh and India's cleanest city.\n            </p>\n          </motion.div>\n\n          {/* Quick Facts */}\n          <motion.div\n            className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-20\"\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            {facts.map((fact, index) => (\n              <motion.div\n                key={fact.label}\n                className=\"text-center p-6 bg-card rounded-lg border border-border\"\n                initial={{ opacity: 0, scale: 0.9 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                data-testid={`fact-${fact.label.toLowerCase()}`}\n              >\n                <div className=\"text-3xl mb-3\">{fact.icon}</div>\n                <div className=\"text-2xl font-bold text-primary mb-2\">{fact.value}</div>\n                <div className=\"text-muted-foreground\">{fact.label}</div>\n              </motion.div>\n            ))}\n          </motion.div>\n\n          {/* Historical Timeline */}\n          <motion.div\n            className=\"mb-20\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-center mb-16\">Historical Timeline</h2>\n            <div className=\"space-y-8\">\n              {timelineEvents.map((event, index) => (\n                <motion.div\n                  key={event.year}\n                  className=\"flex flex-col md:flex-row gap-6 p-6 bg-card rounded-lg border border-border\"\n                  initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`timeline-${event.year}`}\n                >\n                  <div className=\"md:w-32 flex-shrink-0\">\n                    <div className=\"bg-primary text-primary-foreground text-lg font-bold text-center py-2 px-4 rounded-lg\">\n                      {event.year}\n                    </div>\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-semibold mb-3\">{event.title}</h3>\n                    <p className=\"text-muted-foreground\">{event.description}</p>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Cultural Significance */}\n          <motion.div\n            className=\"mb-20\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-center mb-16\">Cultural Significance</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {culturalSignificance.map((item, index) => (\n                <motion.div\n                  key={item.title}\n                  className=\"p-6 bg-card rounded-lg border border-border\"\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`cultural-${item.title.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  <div className=\"flex items-center mb-4\">\n                    <span className=\"text-3xl mr-4\">{item.icon}</span>\n                    <h3 className=\"text-xl font-semibold\">{item.title}</h3>\n                  </div>\n                  <p className=\"text-muted-foreground\">{item.description}</p>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Modern Indore */}\n          <motion.div\n            className=\"bg-secondary p-8 rounded-lg\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h2 className=\"text-4xl font-bold mb-6\">Modern Indore</h2>\n                <p className=\"text-muted-foreground text-lg mb-6\">\n                  Today's Indore stands as a testament to successful urban planning and governance. The city has emerged as a model for cleanliness and sustainability while maintaining its cultural identity and commercial importance.\n                </p>\n                <div className=\"space-y-4\">\n                  {[\n                    'Six-time winner of India\\'s Cleanest City award',\n                    'Major IT and pharmaceutical hub',\n                    'Home to prestigious educational institutions',\n                    'Gateway to Madhya Pradesh tourism'\n                  ].map((achievement, index) => (\n                    <motion.div\n                      key={achievement}\n                      className=\"flex items-center\"\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.6, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                    >\n                      <svg className=\"w-5 h-5 text-primary mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span>{achievement}</span>\n                    </motion.div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"relative\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1596196387740-57d1f71e8dc9?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n                  alt=\"Modern Indore cityscape\"\n                  className=\"rounded-lg shadow-lg w-full\"\n                />\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":9799},"client/src/pages/Contact.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useToast } from '@/hooks/use-toast';\nimport Layout from '@/components/Layout';\n\nconst emergencyContacts = [\n  { service: 'Police', number: '100', icon: '🚔' },\n  { service: 'Fire Department', number: '101', icon: '🚒' },\n  { service: 'Ambulance', number: '108', icon: '🚑' },\n  { service: 'Tourist Helpline', number: '1363', icon: 'ℹ️' }\n];\n\nconst faqs = [\n  {\n    question: 'What is the best time to visit Indore?',\n    answer: 'The best time to visit Indore is from October to March when the weather is pleasant and perfect for sightseeing.'\n  },\n  {\n    question: 'How to reach Indore?',\n    answer: 'Indore is well-connected by air, rail, and road. The city has Devi Ahilya Bai Holkar Airport and is a major railway junction.'\n  },\n  {\n    question: 'What are the must-try foods in Indore?',\n    answer: 'Don\\'t miss the famous poha-jalebi breakfast, garadu, samosa, and the vibrant street food scene at Sarafa Bazaar.'\n  },\n  {\n    question: 'Where can I find accommodation?',\n    answer: 'Indore offers accommodation options ranging from budget hotels to luxury resorts, concentrated around the city center and major attractions.'\n  }\n];\n\nexport default function ContactPage() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch('/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        toast({\n          title: \"Message sent successfully!\",\n          description: \"We'll get back to you as soon as possible.\",\n        });\n        setFormData({\n          firstName: '',\n          lastName: '',\n          email: '',\n          subject: '',\n          message: ''\n        });\n      } else {\n        toast({\n          title: \"Error sending message\",\n          description: result.error || \"Please try again later.\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      toast({\n        title: \"Error sending message\",\n        description: \"Please check your connection and try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Layout \n      title=\"Contact Us - All About Indore\"\n      description=\"Get in touch with us for any questions about Indore tourism, travel tips, or feedback. Find emergency contacts and frequently asked questions.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">Contact Us</h1>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Have questions about Indore or need travel assistance? We're here to help you plan your perfect visit.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 mb-20\">\n            {/* Contact Form */}\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n            >\n              <h2 className=\"text-2xl font-bold mb-6\">Send us a Message</h2>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label htmlFor=\"firstName\" className=\"block text-sm font-medium mb-2\">\n                      First Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      value={formData.firstName}\n                      onChange={handleInputChange}\n                      required\n                      data-testid=\"input-first-name\"\n                      className=\"w-full px-4 py-3 border border-border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent bg-background\"\n                      placeholder=\"Your first name\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"lastName\" className=\"block text-sm font-medium mb-2\">\n                      Last Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"lastName\"\n                      name=\"lastName\"\n                      value={formData.lastName}\n                      onChange={handleInputChange}\n                      required\n                      data-testid=\"input-last-name\"\n                      className=\"w-full px-4 py-3 border border-border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent bg-background\"\n                      placeholder=\"Your last name\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium mb-2\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    required\n                    data-testid=\"input-email\"\n                    className=\"w-full px-4 py-3 border border-border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent bg-background\"\n                    placeholder=\"your.email@example.com\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"subject\" className=\"block text-sm font-medium mb-2\">\n                    Subject\n                  </label>\n                  <select\n                    id=\"subject\"\n                    name=\"subject\"\n                    value={formData.subject}\n                    onChange={handleInputChange}\n                    required\n                    data-testid=\"select-subject\"\n                    className=\"w-full px-4 py-3 border border-border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent bg-background\"\n                  >\n                    <option value=\"\">Select a subject</option>\n                    <option value=\"tourism\">Tourism Information</option>\n                    <option value=\"travel\">Travel Assistance</option>\n                    <option value=\"feedback\">Feedback</option>\n                    <option value=\"business\">Business Inquiry</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"message\" className=\"block text-sm font-medium mb-2\">\n                    Message\n                  </label>\n                  <textarea\n                    id=\"message\"\n                    name=\"message\"\n                    value={formData.message}\n                    onChange={handleInputChange}\n                    required\n                    rows={6}\n                    data-testid=\"textarea-message\"\n                    className=\"w-full px-4 py-3 border border-border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent bg-background resize-none\"\n                    placeholder=\"Tell us how we can help you...\"\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  data-testid=\"button-submit\"\n                  className=\"w-full bg-primary text-primary-foreground py-3 px-6 rounded-lg font-semibold hover:bg-primary/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isSubmitting ? 'Sending...' : 'Send Message'}\n                </button>\n              </form>\n            </motion.div>\n\n            {/* Contact Information */}\n            <motion.div\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              className=\"space-y-8\"\n            >\n              <div>\n                <h2 className=\"text-2xl font-bold mb-6\">Get in Touch</h2>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start gap-4\">\n                    <svg className=\"w-6 h-6 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    </svg>\n                    <div>\n                      <h3 className=\"font-semibold\" data-testid=\"text-address-label\">Address</h3>\n                      <p className=\"text-muted-foreground\" data-testid=\"text-address\">\n                        Indore, Madhya Pradesh, India<br />\n                        Heart of India - 452001\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <svg className=\"w-6 h-6 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                    </svg>\n                    <div>\n                      <h3 className=\"font-semibold\">Email</h3>\n                      <p className=\"text-muted-foreground\" data-testid=\"text-email\">info@allaboutindore.com</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <svg className=\"w-6 h-6 text-primary mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                    </svg>\n                    <div>\n                      <h3 className=\"font-semibold\">Phone</h3>\n                      <p className=\"text-muted-foreground\" data-testid=\"text-phone\">+91 731 XXX XXXX</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Emergency Contacts */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-4\">Emergency Contacts</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {emergencyContacts.map((contact) => (\n                    <div key={contact.service} className=\"bg-card p-4 rounded-lg border border-border text-center\" data-testid={`emergency-${contact.service.toLowerCase().replace(/\\s+/g, '-')}`}>\n                      <div className=\"text-2xl mb-2\">{contact.icon}</div>\n                      <div className=\"font-semibold text-sm\">{contact.service}</div>\n                      <div className=\"text-primary font-bold\">{contact.number}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </motion.div>\n          </div>\n\n          {/* FAQ Section */}\n          <motion.div\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-12\">Frequently Asked Questions</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {faqs.map((faq, index) => (\n                <motion.div\n                  key={index}\n                  className=\"bg-card p-6 rounded-lg border border-border\"\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`faq-${index}`}\n                >\n                  <h3 className=\"font-semibold mb-3 text-primary\">{faq.question}</h3>\n                  <p className=\"text-muted-foreground\">{faq.answer}</p>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":13485},"client/src/pages/Events.tsx":{"content":"import { motion } from 'framer-motion';\nimport Layout from '@/components/Layout';\n\nconst events = [\n  {\n    id: 1,\n    name: 'Rangpanchami Festival',\n    description: 'A vibrant celebration of colors marking the end of Holi festivities, unique to Indore with traditional dances and community gatherings.',\n    date: 'March 18, 2024',\n    category: 'festival',\n    imageUrl: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'City Center, Rajwada Palace',\n    price: 'Free'\n  },\n  {\n    id: 2,\n    name: 'Ahilya Utsav',\n    description: 'Annual cultural festival celebrating Rani Ahilya Bai Holkar with classical music, dance performances, and art exhibitions.',\n    date: 'December 2-8, 2024',\n    category: 'cultural',\n    imageUrl: 'https://images.unsplash.com/photo-1611273426858-450d8e3c9fce?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'Lal Bagh Palace Grounds',\n    price: '₹100-500'\n  },\n  {\n    id: 3,\n    name: 'Ganesh Chaturthi',\n    description: 'Grand celebration with elaborate processions, beautifully decorated pandals, and the famous Khajrana Ganesh temple festivities.',\n    date: 'August 30, 2024',\n    category: 'religious',\n    imageUrl: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'Khajrana Ganesh Temple',\n    price: 'Free'\n  },\n  {\n    id: 4,\n    name: 'Navratri Festival',\n    description: 'Nine nights of energetic garba and dandiya dancing with live music and traditional festivities.',\n    date: 'October 15-24, 2024',\n    category: 'festival',\n    imageUrl: 'https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200',\n    location: 'Various venues across city',\n    price: '₹150-800'\n  }\n];\n\nconst eventCategories = [\n  { name: 'Cultural Festivals', count: 12, color: 'bg-green-500/20 text-green-400' },\n  { name: 'Religious Events', count: 8, color: 'bg-blue-500/20 text-blue-400' },\n  { name: 'Food Festivals', count: 5, color: 'bg-yellow-500/20 text-yellow-400' },\n  { name: 'Music & Arts', count: 6, color: 'bg-purple-500/20 text-purple-400' }\n];\n\nexport default function EventsPage() {\n  const getCategoryIcon = (category: string) => {\n    const icons: Record<string, string> = {\n      'festival': '🎉',\n      'cultural': '🎭',\n      'religious': '🕉️',\n      'food': '🍴',\n      'music': '🎵'\n    };\n    return icons[category] || '📅';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'festival': 'bg-pink-500/20 text-pink-400',\n      'cultural': 'bg-purple-500/20 text-purple-400',\n      'religious': 'bg-blue-500/20 text-blue-400',\n      'food': 'bg-yellow-500/20 text-yellow-400'\n    };\n    return colors[category] || 'bg-gray-500/20 text-gray-400';\n  };\n\n  return (\n    <Layout \n      title=\"Events & Festivals in Indore - Cultural Celebrations & Festivities\"\n      description=\"Explore the vibrant events and festivals in Indore including Rangpanchami, Ahilya Utsav, Ganesh Chaturthi, and cultural celebrations throughout the year.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">Events & Festivals</h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Experience the vibrant cultural celebrations that bring Indore to life throughout the year\n            </p>\n          </motion.div>\n\n          {/* Event Categories Overview */}\n          <motion.div\n            className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            {eventCategories.map((category, index) => (\n              <motion.div\n                key={category.name}\n                className=\"text-center p-6 bg-card rounded-lg border border-border\"\n                initial={{ opacity: 0, scale: 0.9 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: 0.4 + index * 0.1 }}\n                data-testid={`category-${category.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                <div className={`text-xl font-bold mb-2 px-3 py-1 rounded-full ${category.color}`}>\n                  {category.count}+\n                </div>\n                <div className=\"text-sm font-medium\">{category.name}</div>\n              </motion.div>\n            ))}\n          </motion.div>\n\n          {/* Featured Events */}\n          <motion.div\n            className=\"mb-16\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.8, delay: 0.6 }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-12\">Featured Events</h2>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {events.map((event, index) => (\n                <motion.div\n                  key={event.id}\n                  className=\"bg-card border border-border rounded-lg overflow-hidden hover:shadow-lg transition-all duration-300\"\n                  initial={{ opacity: 0, y: 50 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: 0.8 + index * 0.1 }}\n                  whileHover={{ y: -4 }}\n                  data-testid={`event-${event.id}`}\n                >\n                  <div className=\"md:flex\">\n                    <div className=\"md:w-1/3 relative\">\n                      <img\n                        src={event.imageUrl}\n                        alt={event.name}\n                        className=\"object-cover w-full h-48 md:h-full\"\n                      />\n                      <div className=\"absolute top-4 left-4\">\n                        <span className={`px-3 py-1 rounded-full text-xs font-medium ${getCategoryColor(event.category)}`}>\n                          {getCategoryIcon(event.category)} {event.category}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"md:w-2/3 p-6\">\n                      <h3 className=\"text-xl font-bold mb-3\" data-testid={`event-name-${event.id}`}>\n                        {event.name}\n                      </h3>\n                      <p className=\"text-muted-foreground mb-4 line-clamp-3\" data-testid={`event-description-${event.id}`}>\n                        {event.description}\n                      </p>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-4 h-4 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                          </svg>\n                          <span data-testid={`event-date-${event.id}`}>{event.date}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-4 h-4 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                          </svg>\n                          <span data-testid={`event-location-${event.id}`}>{event.location}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-4 h-4 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                          </svg>\n                          <span className=\"font-semibold text-primary\" data-testid={`event-price-${event.id}`}>{event.price}</span>\n                        </div>\n                      </div>\n                      <button className=\"mt-4 text-primary hover:text-primary/80 font-medium transition-colors flex items-center gap-1\" data-testid={`event-details-${event.id}`}>\n                        Event Details\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Event Calendar */}\n          <motion.div\n            className=\"bg-secondary p-8 rounded-lg mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-8\">Annual Event Calendar</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {[\n                { month: 'January', events: ['Republic Day Celebration', 'Makar Sankranti'] },\n                { month: 'March', events: ['Holi', 'Rangpanchami', 'Malwa Utsav'] },\n                { month: 'April', events: ['Ram Navami', 'Mahavir Jayanti'] },\n                { month: 'August', events: ['Independence Day', 'Ganesh Chaturthi'] },\n                { month: 'October', events: ['Navratri', 'Dussehra', 'Karva Chauth'] },\n                { month: 'December', events: ['Ahilya Utsav', 'Christmas Celebration'] }\n              ].map((monthData, index) => (\n                <motion.div\n                  key={monthData.month}\n                  className=\"bg-card p-4 rounded-lg border border-border\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`calendar-${monthData.month.toLowerCase()}`}\n                >\n                  <h3 className=\"font-semibold text-primary mb-3\">{monthData.month}</h3>\n                  <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                    {monthData.events.map((event, i) => (\n                      <li key={i} className=\"flex items-center gap-2\">\n                        <span className=\"w-1.5 h-1.5 bg-primary rounded-full\"></span>\n                        {event}\n                      </li>\n                    ))}\n                  </ul>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Cultural Heritage */}\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-12\">Cultural Heritage</h2>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h3 className=\"text-2xl font-semibold mb-6\">Celebrating Traditions</h3>\n                <p className=\"text-muted-foreground text-lg mb-6\">\n                  Indore's events and festivals reflect the city's rich cultural tapestry, blending ancient traditions with modern celebrations. From the unique Rangpanchami festival to the grandeur of Ahilya Utsav, each event tells a story of the city's vibrant heritage.\n                </p>\n                <div className=\"space-y-4\">\n                  {[\n                    'Traditional folk dances and music performances',\n                    'Religious celebrations bringing communities together',\n                    'Cultural exhibitions showcasing local arts and crafts',\n                    'Food festivals highlighting Indore\\'s culinary heritage'\n                  ].map((feature, index) => (\n                    <motion.div\n                      key={feature}\n                      className=\"flex items-center\"\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.6, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                    >\n                      <svg className=\"w-5 h-5 text-primary mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span>{feature}</span>\n                    </motion.div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"relative\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n                  alt=\"Cultural celebration in Indore\"\n                  className=\"rounded-lg shadow-lg w-full\"\n                />\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":13976},"client/src/pages/Food.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Layout from '@/components/Layout';\n\nconst foods = [\n  {\n    id: 1,\n    name: 'Poha Jalebi',\n    description: 'Indore\\'s iconic breakfast combination - fluffed rice with crispy, sweet jalebis.',\n    category: 'breakfast',\n    imageUrl: 'https://images.unsplash.com/photo-1626132647523-66f5bf380027?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹30-50',\n    rating: 5\n  },\n  {\n    id: 2,\n    name: 'Indori Samosa',\n    description: 'Perfectly spiced and crispy samosas served with tangy tamarind and mint chutneys.',\n    category: 'snacks',\n    imageUrl: 'https://images.unsplash.com/photo-1601050690597-df0568f70950?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹15-25',\n    rating: 4\n  },\n  {\n    id: 3,\n    name: 'Garadu',\n    description: 'Deep-fried yam pieces tossed in spices - a unique and beloved Indore street food specialty.',\n    category: 'snacks',\n    imageUrl: 'https://images.unsplash.com/photo-1606491956689-2ea866880c84?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹25-40',\n    rating: 4\n  },\n  {\n    id: 4,\n    name: 'Malpua',\n    description: 'Traditional sweet pancakes served with thick rabri and dry fruits, perfect for festivals.',\n    category: 'sweets',\n    imageUrl: 'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹60-80',\n    rating: 4\n  },\n  {\n    id: 5,\n    name: 'Dal Bafla',\n    description: 'A hearty meal of steamed and baked wheat dumplings served with rich dal and ghee.',\n    category: 'dinner',\n    imageUrl: 'https://images.unsplash.com/photo-1585937421612-70a008356fbe?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹120-180',\n    rating: 5\n  },\n  {\n    id: 6,\n    name: 'Khasta Kachori',\n    description: 'Flaky, crispy kachoris stuffed with spiced dal, served with aloo sabzi and chutneys.',\n    category: 'breakfast',\n    imageUrl: 'https://images.unsplash.com/photo-1599043513900-ed6fe01d3833?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    priceRange: '₹25-35',\n    rating: 4\n  }\n];\n\nconst categories = ['all', 'breakfast', 'snacks', 'sweets', 'dinner'];\n\nexport default function FoodPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  const filteredFoods = selectedCategory === 'all' \n    ? foods \n    : foods.filter(food => food.category === selectedCategory);\n\n  const getCategoryIcon = (category: string) => {\n    const icons: Record<string, string> = {\n      'breakfast': '🌅',\n      'snacks': '🍿',\n      'sweets': '🍮',\n      'dinner': '🍽️'\n    };\n    return icons[category] || '🍴';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'breakfast': 'bg-orange-500/20 text-orange-400',\n      'snacks': 'bg-yellow-500/20 text-yellow-400',\n      'sweets': 'bg-pink-500/20 text-pink-400',\n      'dinner': 'bg-blue-500/20 text-blue-400'\n    };\n    return colors[category] || 'bg-gray-500/20 text-gray-400';\n  };\n\n  const getRatingStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <span key={i} className={i < rating ? 'text-yellow-400' : 'text-gray-300'}>\n        ★\n      </span>\n    ));\n  };\n\n  return (\n    <Layout \n      title=\"Food & Cuisine in Indore - Street Food Capital of India\"\n      description=\"Discover Indore's famous food culture including iconic Poha-Jalebi, street food specialties, traditional sweets, and authentic local cuisine. Experience the flavors of India's food capital.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">Food & Cuisine</h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Experience the culinary capital of India, where every street corner offers a new flavor adventure\n            </p>\n          </motion.div>\n\n          {/* Food Stats */}\n          <motion.div\n            className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">🍽️</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">200+</div>\n              <div className=\"text-muted-foreground\">Food Varieties</div>\n            </div>\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">🏪</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">1000+</div>\n              <div className=\"text-muted-foreground\">Food Outlets</div>\n            </div>\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">⭐</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">#1</div>\n              <div className=\"text-muted-foreground\">Food Capital</div>\n            </div>\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">🌙</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">24/7</div>\n              <div className=\"text-muted-foreground\">Food Scene</div>\n            </div>\n          </motion.div>\n\n          {/* Category Filter */}\n          <motion.div\n            className=\"flex flex-wrap justify-center gap-4 mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n          >\n            {categories.map((category) => (\n              <button\n                key={category}\n                onClick={() => setSelectedCategory(category)}\n                className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 capitalize flex items-center gap-2 ${\n                  selectedCategory === category\n                    ? 'bg-primary text-primary-foreground'\n                    : 'bg-card hover:bg-muted border border-border'\n                }`}\n                data-testid={`filter-${category}`}\n              >\n                {category !== 'all' && <span>{getCategoryIcon(category)}</span>}\n                {category}\n              </button>\n            ))}\n          </motion.div>\n\n          {/* Food Items Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n            {filteredFoods.map((food, index) => (\n              <motion.div\n                key={food.id}\n                className=\"bg-card border border-border rounded-lg overflow-hidden hover:shadow-lg transition-all duration-300 group\"\n                initial={{ opacity: 0, y: 50 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                whileHover={{ y: -8 }}\n                data-testid={`food-${food.id}`}\n              >\n                <div className=\"relative h-48 overflow-hidden\">\n                  <img\n                    src={food.imageUrl}\n                    alt={food.name}\n                    className=\"object-cover w-full h-full group-hover:scale-110 transition-transform duration-300\"\n                  />\n                  <div className=\"absolute top-4 left-4\">\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${getCategoryColor(food.category)}`}>\n                      {getCategoryIcon(food.category)} {food.category}\n                    </span>\n                  </div>\n                  <div className=\"absolute bottom-4 right-4 bg-black/70 text-white px-3 py-1 rounded-full text-sm font-bold\">\n                    {food.priceRange}\n                  </div>\n                </div>\n                \n                <div className=\"p-6\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <h3 className=\"text-xl font-bold\" data-testid={`food-name-${food.id}`}>\n                      {food.name}\n                    </h3>\n                    <div className=\"flex items-center gap-1\" data-testid={`food-rating-${food.id}`}>\n                      {getRatingStars(food.rating)}\n                    </div>\n                  </div>\n                  <p className=\"text-muted-foreground mb-4 line-clamp-3\" data-testid={`food-description-${food.id}`}>\n                    {food.description}\n                  </p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-primary font-semibold\">{food.priceRange}</span>\n                    <button className=\"text-primary hover:text-primary/80 font-medium transition-colors flex items-center gap-1\" data-testid={`food-try-${food.id}`}>\n                      Try Now\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Famous Food Spots */}\n          <motion.div\n            className=\"bg-secondary p-8 rounded-lg mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-8\">Famous Food Spots</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🌙</div>\n                <h3 className=\"font-semibold mb-2\">Sarafa Bazaar</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Night food market with 100+ stalls serving authentic street food\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🏪</div>\n                <h3 className=\"font-semibold mb-2\">Chappan Dukan</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  56 shops offering diverse snacks and traditional delicacies\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🍽️</div>\n                <h3 className=\"font-semibold mb-2\">Rajwada Area</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Historic area with traditional restaurants and sweet shops\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Food Culture */}\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-8\">Indore Food Culture</h2>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h3 className=\"text-2xl font-semibold mb-6\">Why Indore is the Food Capital</h3>\n                <div className=\"space-y-4\">\n                  {[\n                    'Highest number of food outlets per capita in India',\n                    'Unique fusion of Gujarati, Rajasthani, and Malwa cuisines',\n                    'Innovative street food varieties found nowhere else',\n                    '24/7 food culture with night markets like Sarafa Bazaar'\n                  ].map((feature, index) => (\n                    <motion.div\n                      key={feature}\n                      className=\"flex items-center\"\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.6, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                    >\n                      <svg className=\"w-5 h-5 text-primary mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span>{feature}</span>\n                    </motion.div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"relative\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n                  alt=\"Indore street food scene\"\n                  className=\"rounded-lg shadow-lg w-full\"\n                />\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":13366},"client/src/pages/Gallery.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Layout from '@/components/Layout';\n\nconst galleryImages = [\n  {\n    id: 1,\n    src: 'https://images.unsplash.com/photo-1582510003544-4d00b7f74220?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=500',\n    alt: 'Rajwada Palace at Night',\n    category: 'historical'\n  },\n  {\n    id: 2,\n    src: 'https://images.unsplash.com/photo-1606491956689-2ea866880c84?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300',\n    alt: 'Indore Street Food',\n    category: 'food'\n  },\n  {\n    id: 3,\n    src: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=350',\n    alt: 'Cultural Festival Dance',\n    category: 'events'\n  },\n  {\n    id: 4,\n    src: 'https://images.unsplash.com/photo-1534050359320-02900022671e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=600',\n    alt: 'Lal Bagh Palace Interior',\n    category: 'historical'\n  },\n  {\n    id: 5,\n    src: 'https://images.unsplash.com/photo-1532777946373-b6783242f211?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=600',\n    alt: 'Kanch Mandir Glass Temple',\n    category: 'historical'\n  },\n  {\n    id: 6,\n    src: 'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=350',\n    alt: 'Traditional Sweets',\n    category: 'food'\n  },\n  {\n    id: 7,\n    src: 'https://images.unsplash.com/photo-1441974231531-c6227db76b6e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n    alt: 'Indore Gardens and Nature',\n    category: 'nature'\n  },\n  {\n    id: 8,\n    src: 'https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=550',\n    alt: 'Ganesh Festival Celebration',\n    category: 'events'\n  },\n  {\n    id: 9,\n    src: 'https://images.unsplash.com/photo-1599043513900-ed6fe01d3833?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300',\n    alt: 'Traditional Kachori',\n    category: 'food'\n  },\n  {\n    id: 10,\n    src: 'https://images.unsplash.com/photo-1609920658906-8223bd289001?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=450',\n    alt: 'Architectural Details',\n    category: 'historical'\n  },\n  {\n    id: 11,\n    src: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=600',\n    alt: 'Patalpani Waterfall',\n    category: 'nature'\n  },\n  {\n    id: 12,\n    src: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=350',\n    alt: 'Night Food Scene',\n    category: 'food'\n  }\n];\n\nconst categories = ['all', 'historical', 'food', 'events', 'nature'];\n\nexport default function GalleryPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [selectedImage, setSelectedImage] = useState<number | null>(null);\n\n  const filteredImages = selectedCategory === 'all' \n    ? galleryImages \n    : galleryImages.filter(image => image.category === selectedCategory);\n\n  const getCategoryIcon = (category: string) => {\n    const icons: Record<string, string> = {\n      'historical': '🏛️',\n      'food': '🍽️',\n      'events': '🎉',\n      'nature': '🌿'\n    };\n    return icons[category] || '📸';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'historical': 'bg-amber-500/20 text-amber-400',\n      'food': 'bg-orange-500/20 text-orange-400',\n      'events': 'bg-pink-500/20 text-pink-400',\n      'nature': 'bg-green-500/20 text-green-400'\n    };\n    return colors[category] || 'bg-gray-500/20 text-gray-400';\n  };\n\n  const openLightbox = (imageId: number) => {\n    setSelectedImage(imageId);\n  };\n\n  const closeLightbox = () => {\n    setSelectedImage(null);\n  };\n\n  const selectedImageData = selectedImage ? galleryImages.find(img => img.id === selectedImage) : null;\n\n  return (\n    <Layout \n      title=\"Photo Gallery - Beautiful Images of Indore\"\n      description=\"Explore stunning photographs of Indore showcasing historical monuments, delicious food, cultural events, and natural beauty. Visual journey through the Heart of Madhya Pradesh.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">Photo Gallery</h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              A visual journey through Indore's magnificent heritage, vibrant culture, and natural beauty\n            </p>\n          </motion.div>\n\n          {/* Gallery Stats */}\n          <motion.div\n            className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">📸</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">500+</div>\n              <div className=\"text-muted-foreground\">Photos</div>\n            </div>\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">🏛️</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">15+</div>\n              <div className=\"text-muted-foreground\">Monuments</div>\n            </div>\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">🎉</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">25+</div>\n              <div className=\"text-muted-foreground\">Events</div>\n            </div>\n            <div className=\"text-center p-6 bg-card rounded-lg border border-border\">\n              <div className=\"text-3xl mb-3\">🌿</div>\n              <div className=\"text-2xl font-bold text-primary mb-2\">10+</div>\n              <div className=\"text-muted-foreground\">Nature Spots</div>\n            </div>\n          </motion.div>\n\n          {/* Category Filter */}\n          <motion.div\n            className=\"flex flex-wrap justify-center gap-4 mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n          >\n            {categories.map((category) => (\n              <button\n                key={category}\n                onClick={() => setSelectedCategory(category)}\n                className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 capitalize flex items-center gap-2 ${\n                  selectedCategory === category\n                    ? 'bg-primary text-primary-foreground'\n                    : 'bg-card hover:bg-muted border border-border'\n                }`}\n                data-testid={`filter-${category}`}\n              >\n                {category !== 'all' && <span>{getCategoryIcon(category)}</span>}\n                {category} {category !== 'all' && `(${galleryImages.filter(img => img.category === category).length})`}\n              </button>\n            ))}\n          </motion.div>\n\n          {/* Image Grid */}\n          <div className=\"columns-1 md:columns-2 lg:columns-3 xl:columns-4 gap-6 space-y-6\">\n            {filteredImages.map((image, index) => (\n              <motion.div\n                key={image.id}\n                className=\"break-inside-avoid group cursor-pointer\"\n                initial={{ opacity: 0, y: 50 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                onClick={() => openLightbox(image.id)}\n                data-testid={`image-${image.id}`}\n              >\n                <div className=\"relative overflow-hidden rounded-lg bg-card border border-border\">\n                  <img\n                    src={image.src}\n                    alt={image.alt}\n                    className=\"w-full object-cover transition-transform duration-300 group-hover:scale-105\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-300\">\n                    <div className=\"absolute top-4 left-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                      <span className={`px-3 py-1 rounded-full text-xs font-medium ${getCategoryColor(image.category)}`}>\n                        {getCategoryIcon(image.category)} {image.category}\n                      </span>\n                    </div>\n                    <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                      <div className=\"bg-white/20 backdrop-blur-sm rounded-full p-3\">\n                        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                    <p className=\"text-white text-sm font-medium\">{image.alt}</p>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Lightbox Modal */}\n          {selectedImage && selectedImageData && (\n            <motion.div\n              className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              onClick={closeLightbox}\n            >\n              <motion.div\n                className=\"relative max-w-4xl max-h-full\"\n                initial={{ scale: 0.8, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                exit={{ scale: 0.8, opacity: 0 }}\n                onClick={(e) => e.stopPropagation()}\n              >\n                <img\n                  src={selectedImageData.src}\n                  alt={selectedImageData.alt}\n                  className=\"max-w-full max-h-[80vh] object-contain rounded-lg\"\n                />\n                <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-white text-lg font-semibold mb-1\">{selectedImageData.alt}</h3>\n                      <span className={`px-3 py-1 rounded-full text-xs font-medium ${getCategoryColor(selectedImageData.category)}`}>\n                        {getCategoryIcon(selectedImageData.category)} {selectedImageData.category}\n                      </span>\n                    </div>\n                    <button\n                      onClick={closeLightbox}\n                      className=\"text-white hover:text-gray-300 transition-colors\"\n                      data-testid=\"button-close-lightbox\"\n                    >\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              </motion.div>\n            </motion.div>\n          )}\n\n          {/* Photography Tips */}\n          <motion.div\n            className=\"mt-16 bg-secondary p-8 rounded-lg\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-8\">Photography Tips for Indore</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🌅</div>\n                <h3 className=\"font-semibold mb-2\">Golden Hour</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Best lighting for monuments and architecture during sunrise and sunset\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🏛️</div>\n                <h3 className=\"font-semibold mb-2\">Architecture</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Capture intricate details of Rajwada and Lal Bagh Palace\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🍽️</div>\n                <h3 className=\"font-semibold mb-2\">Food Photography</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Perfect lighting at Sarafa Bazaar during evening hours\n                </p>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":13504},"client/src/pages/Home.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Link } from 'wouter';\nimport Hero from '@/components/ui/hero';\nimport Layout from '@/components/Layout';\n\nconst highlights = [\n  {\n    title: 'Historical Places',\n    description: 'Explore magnificent palaces, ancient temples, and architectural marvels',\n    imageUrl: 'https://images.unsplash.com/photo-1582510003544-4d00b7f74220?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/places',\n    icon: '🏛️',\n    stats: '15+ Attractions'\n  },\n  {\n    title: 'Food & Cuisine',\n    description: 'Savor authentic Indori flavors from famous poha-jalebi to diverse street food delights',\n    imageUrl: 'https://images.unsplash.com/photo-1626132647523-66f5bf380027?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/food',\n    icon: '🍽️',\n    stats: '200+ Dishes'\n  },\n  {\n    title: 'Events & Festivals',\n    description: 'Join vibrant celebrations and cultural events that bring the city to life throughout the year',\n    imageUrl: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/events',\n    icon: '🎉',\n    stats: '50+ Events'\n  },\n  {\n    title: 'Weather',\n    description: 'Stay updated with real-time weather conditions and plan your perfect visit to Indore',\n    imageUrl: 'https://images.unsplash.com/photo-1504608524841-42fe6f032b4b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    href: '/weather',\n    icon: '🌤️',\n    stats: 'Live Updates'\n  },\n];\n\nconst testimonials = [\n  {\n    name: 'Priya Sharma',\n    location: 'Delhi',\n    text: 'Indore exceeded all my expectations! The food was incredible and the people were so welcoming.',\n    rating: 5,\n    avatar: 'https://images.unsplash.com/photo-1494790108755-2616c96a2ba8?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150'\n  },\n  {\n    name: 'Rajesh Kumar',\n    location: 'Mumbai',\n    text: 'The perfect blend of history and modernity. I loved exploring the palaces and trying street food.',\n    rating: 5,\n    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150'\n  },\n  {\n    name: 'Sarah Johnson',\n    location: 'London',\n    text: 'An amazing cultural experience! The festivals and local traditions were absolutely fascinating.',\n    rating: 5,\n    avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150'\n  }\n];\n\nconst cityStats = [\n  { number: '3M+', label: 'Population', description: 'Vibrant metropolitan city' },\n  { number: '500+', label: 'Years Old', description: 'Rich historical heritage' },\n  { number: '15+', label: 'Attractions', description: 'Must-visit destinations' },\n  { number: '200+', label: 'Food Items', description: 'Culinary diversity' }\n];\n\nconst features = [\n  {\n    icon: '🍴',\n    title: 'Food Capital',\n    description: 'Known as the food capital of India with world-famous street food'\n  },\n  {\n    icon: '🏆',\n    title: 'Cleanest City',\n    description: 'Ranked as one of Indias cleanest cities for multiple years'\n  },\n  {\n    icon: '🎭',\n    title: 'Cultural Hub',\n    description: 'Rich cultural heritage with vibrant festivals and traditions'\n  },\n  {\n    icon: '🏭',\n    title: 'Commercial Center',\n    description: 'Major commercial and industrial hub of Madhya Pradesh'\n  }\n];\n\nconst services = [\n  {\n    title: 'Guided Tours',\n    description: 'Professional local guides who know every corner of Indore',\n    image: 'https://images.unsplash.com/photo-1544735716-392fe2489ffa?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300',\n    features: ['Historical insights', 'Local stories', 'Hidden gems']\n  },\n  {\n    title: 'Food Tours',\n    description: 'Taste the authentic flavors of Indore with our culinary experts',\n    image: 'https://images.unsplash.com/photo-1555939594-58d7cb561ad1?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300',\n    features: ['Street food tours', 'Traditional restaurants', 'Cooking classes']\n  },\n  {\n    title: 'Cultural Events',\n    description: 'Experience festivals and cultural celebrations throughout the year',\n    image: 'https://images.unsplash.com/photo-1533174072545-7a4b6ad7a6c3?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300',\n    features: ['Festival participation', 'Traditional shows', 'Art exhibitions']\n  }\n];\n\nconst galleryImages = [\n  'https://images.unsplash.com/photo-1570168007204-dfb528c6958f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n  'https://images.unsplash.com/photo-1582510003544-4d00b7f74220?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n  'https://images.unsplash.com/photo-1626132647523-66f5bf380027?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n  'https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n  'https://images.unsplash.com/photo-1609920658906-8223bd289001?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n  'https://images.unsplash.com/photo-1555939594-58d7cb561ad1?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n  'https://images.unsplash.com/photo-1504608524841-42fe6f032b4b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n  'https://images.unsplash.com/photo-1533174072545-7a4b6ad7a6c3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600'\n];\n\nconst attractions = [\n  {\n    name: 'Rajwada Palace',\n    description: 'Historic palace of the Holkar dynasty with stunning architecture',\n    image: 'https://images.unsplash.com/photo-1582510003544-4d00b7f74220?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    rating: 4.8,\n    category: 'Historical'\n  },\n  {\n    name: 'Sarafa Bazaar',\n    description: 'Famous night food market with incredible street food variety',\n    image: 'https://images.unsplash.com/photo-1555939594-58d7cb561ad1?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    rating: 4.9,\n    category: 'Food'\n  },\n  {\n    name: 'Lal Bagh Palace',\n    description: 'Opulent palace showcasing European architectural influence',\n    image: 'https://images.unsplash.com/photo-1609920658906-8223bd289001?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    rating: 4.7,\n    category: 'Historical'\n  },\n  {\n    name: 'Patalpani Waterfall',\n    description: 'Scenic waterfall perfect for nature lovers and photographers',\n    image: 'https://images.unsplash.com/photo-1504608524841-42fe6f032b4b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    rating: 4.6,\n    category: 'Nature'\n  }\n];\n\nexport default function HomePage() {\n  return (\n    <Layout \n      title=\"All About Indore - Discover the Heart of Madhya Pradesh\"\n      description=\"Explore Indore's rich culture, delicious cuisine, historical places, and vibrant events. Your complete guide to the Heart of Madhya Pradesh.\"\n    >\n      <Hero />\n      \n      {/* Quick Highlights */}\n      <section className=\"py-20 bg-card\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">Discover Indore</h2>\n            <p className=\"text-muted-foreground text-lg\">Experience the best of what our city has to offer</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {highlights.map((item, index) => (\n              <motion.div\n                key={item.title}\n                initial={{ opacity: 0, y: 50 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ y: -8 }}\n                className=\"bg-background border border-border rounded-lg p-6 card-hover cursor-pointer\"\n                data-testid={`card-${item.title.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                <Link href={item.href}>\n                  <div className=\"relative h-40 mb-4 rounded-lg overflow-hidden\">\n                    <img\n                      src={item.imageUrl}\n                      alt={item.title}\n                      className=\"object-cover w-full h-full\"\n                    />\n                  </div>\n                  <div className=\"flex items-center mb-3\">\n                    <span className=\"text-xl mr-3\">{item.icon}</span>\n                    <h3 className=\"text-xl font-semibold\">{item.title}</h3>\n                  </div>\n                  <p className=\"text-muted-foreground mb-4\">{item.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-primary font-semibold\">{item.stats}</span>\n                    <svg className=\"w-4 h-4 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </Link>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Section */}\n      <section className=\"py-20 bg-secondary\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-4xl font-bold mb-6 text-foreground\">Why Visit Indore?</h2>\n              <p className=\"text-muted-foreground text-lg mb-8\">\n                Indore, the largest city in Madhya Pradesh, is a perfect blend of historical significance and modern development. Known as the commercial capital of the state, it offers visitors a unique experience with its rich culture, delicious food, and warm hospitality.\n              </p>\n              <div className=\"space-y-4\">\n                {[\n                  'Rich historical heritage and architecture',\n                  'World-famous street food culture',\n                  'Vibrant festivals and cultural events',\n                  'Modern shopping and entertainment'\n                ].map((feature, index) => (\n                  <motion.div\n                    key={feature}\n                    className=\"flex items-center\"\n                    initial={{ opacity: 0, x: -20 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    transition={{ duration: 0.6, delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                  >\n                    <svg className=\"w-5 h-5 text-primary mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span className=\"text-foreground\">{feature}</span>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, x: 50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"relative\"\n            >\n              <img\n                src=\"https://images.unsplash.com/photo-1609920658906-8223bd289001?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n                alt=\"Indore architectural beauty\"\n                className=\"rounded-lg shadow-2xl w-full\"\n              />\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* City Statistics */}\n      <section className=\"py-20 bg-gradient-to-br from-primary to-primary/80\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4 text-primary-foreground\">Indore by Numbers</h2>\n            <p className=\"text-primary-foreground/80 text-lg\">Discover what makes our city special</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8\">\n            {cityStats.map((stat, index) => (\n              <motion.div\n                key={stat.label}\n                className=\"text-center\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"text-5xl font-bold text-primary-foreground mb-2\">{stat.number}</div>\n                <div className=\"text-xl font-semibold text-primary-foreground mb-1\">{stat.label}</div>\n                <div className=\"text-primary-foreground/70\">{stat.description}</div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">What Makes Indore Special</h2>\n            <p className=\"text-muted-foreground text-lg\">Discover the unique characteristics of our beloved city</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {features.map((feature, index) => (\n              <motion.div\n                key={feature.title}\n                className=\"text-center p-6 bg-card rounded-lg border border-border card-hover\"\n                initial={{ opacity: 0, y: 50 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"text-4xl mb-4\">{feature.icon}</div>\n                <h3 className=\"text-xl font-semibold mb-3\">{feature.title}</h3>\n                <p className=\"text-muted-foreground\">{feature.description}</p>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials */}\n      <section className=\"py-20 bg-secondary\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4 text-secondary-foreground\">What Visitors Say</h2>\n            <p className=\"text-secondary-foreground/80 text-lg\">Hear from travelers who fell in love with Indore</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {testimonials.map((testimonial, index) => (\n              <motion.div\n                key={testimonial.name}\n                className=\"bg-background p-6 rounded-lg border border-border card-hover\"\n                initial={{ opacity: 0, y: 50 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"flex items-center mb-4\">\n                  <img\n                    src={testimonial.avatar}\n                    alt={testimonial.name}\n                    className=\"w-12 h-12 rounded-full mr-4\"\n                  />\n                  <div>\n                    <h4 className=\"font-semibold\">{testimonial.name}</h4>\n                    <p className=\"text-muted-foreground text-sm\">{testimonial.location}</p>\n                  </div>\n                </div>\n                <div className=\"flex mb-4\">\n                  {[...Array(testimonial.rating)].map((_, i) => (\n                    <span key={i} className=\"text-primary text-lg\">⭐</span>\n                  ))}\n                </div>\n                <p className=\"text-foreground italic\">\"{testimonial.text}\"</p>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-20 bg-card\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">Our Services</h2>\n            <p className=\"text-muted-foreground text-lg\">Comprehensive tourism services to make your visit unforgettable</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <motion.div\n                key={service.title}\n                className=\"bg-background rounded-lg overflow-hidden border border-border card-hover\"\n                initial={{ opacity: 0, y: 50 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.2 }}\n                viewport={{ once: true }}\n              >\n                <img\n                  src={service.image}\n                  alt={service.title}\n                  className=\"w-full h-48 object-cover\"\n                />\n                <div className=\"p-6\">\n                  <h3 className=\"text-xl font-semibold mb-3\">{service.title}</h3>\n                  <p className=\"text-muted-foreground mb-4\">{service.description}</p>\n                  <ul className=\"space-y-2\">\n                    {service.features.map((feature, idx) => (\n                      <li key={idx} className=\"flex items-center text-sm\">\n                        <span className=\"w-2 h-2 bg-primary rounded-full mr-3\"></span>\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Top Attractions */}\n      <section className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">Must-Visit Attractions</h2>\n            <p className=\"text-muted-foreground text-lg\">Discover the most popular destinations in Indore</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {attractions.map((attraction, index) => (\n              <motion.div\n                key={attraction.name}\n                className=\"bg-card rounded-lg overflow-hidden border border-border card-hover\"\n                initial={{ opacity: 0, scale: 0.9 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"relative\">\n                  <img\n                    src={attraction.image}\n                    alt={attraction.name}\n                    className=\"w-full h-40 object-cover\"\n                  />\n                  <div className=\"absolute top-3 left-3 bg-primary text-primary-foreground px-2 py-1 rounded text-xs font-semibold\">\n                    {attraction.category}\n                  </div>\n                  <div className=\"absolute top-3 right-3 bg-background/90 px-2 py-1 rounded text-xs font-semibold flex items-center\">\n                    ⭐ {attraction.rating}\n                  </div>\n                </div>\n                <div className=\"p-4\">\n                  <h3 className=\"font-semibold mb-2\">{attraction.name}</h3>\n                  <p className=\"text-muted-foreground text-sm\">{attraction.description}</p>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Gallery Section */}\n      <section className=\"py-20 bg-secondary\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4 text-secondary-foreground\">Photo Gallery</h2>\n            <p className=\"text-secondary-foreground/80 text-lg\">Glimpse the beauty of Indore through stunning visuals</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {galleryImages.map((image, index) => (\n              <motion.div\n                key={index}\n                className=\"relative group overflow-hidden rounded-lg\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ scale: 1.05 }}\n              >\n                <img\n                  src={image}\n                  alt={`Gallery image ${index + 1}`}\n                  className=\"w-full h-48 object-cover transition-transform duration-300 group-hover:scale-110\"\n                />\n                <div className=\"absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n              </motion.div>\n            ))}\n          </div>\n          \n          <div className=\"text-center mt-12\">\n            <Link\n              href=\"/gallery\"\n              className=\"bg-primary text-primary-foreground px-8 py-3 rounded-lg font-semibold hover:bg-primary/90 transition-colors inline-block\"\n            >\n              View Full Gallery\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Food Specialties Section */}\n      <section className=\"py-20 bg-gradient-to-r from-accent to-accent/80\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-4xl font-bold mb-6 text-accent-foreground\">Famous Food Delicacies</h2>\n              <p className=\"text-accent-foreground/80 text-lg mb-8\">\n                Indore is celebrated as the food capital of India, offering an incredible variety of street food and traditional dishes that will tantalize your taste buds.\n              </p>\n              <div className=\"grid grid-cols-2 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">🥘</div>\n                  <h4 className=\"font-semibold text-accent-foreground\">Poha-Jalebi</h4>\n                  <p className=\"text-accent-foreground/70 text-sm\">Breakfast combo</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">🍛</div>\n                  <h4 className=\"font-semibold text-accent-foreground\">Dal Bafla</h4>\n                  <p className=\"text-accent-foreground/70 text-sm\">Traditional meal</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">🥙</div>\n                  <h4 className=\"font-semibold text-accent-foreground\">Garadu</h4>\n                  <p className=\"text-accent-foreground/70 text-sm\">Street snack</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">🧁</div>\n                  <h4 className=\"font-semibold text-accent-foreground\">Malpua</h4>\n                  <p className=\"text-accent-foreground/70 text-sm\">Sweet dessert</p>\n                </div>\n              </div>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, x: 50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"relative\"\n            >\n              <div className=\"grid grid-cols-2 gap-4\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1626132647523-66f5bf380027?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\"\n                  alt=\"Indori food\"\n                  className=\"rounded-lg shadow-lg\"\n                />\n                <img\n                  src=\"https://images.unsplash.com/photo-1555939594-58d7cb561ad1?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\"\n                  alt=\"Street food\"\n                  className=\"rounded-lg shadow-lg mt-8\"\n                />\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter Section */}\n      <section className=\"py-20 bg-card\">\n        <div className=\"container mx-auto px-4 lg:px-6 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Stay Updated</h2>\n            <p className=\"text-muted-foreground text-lg mb-8 max-w-2xl mx-auto\">\n              Get the latest news about events, festivals, and new attractions in Indore.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto\">\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                className=\"flex-1 px-4 py-3 rounded-lg border border-border bg-background text-foreground focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n              <button className=\"bg-primary text-primary-foreground px-6 py-3 rounded-lg font-semibold hover:bg-primary/90 transition-colors\">\n                Subscribe\n              </button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Travel Tips Section */}\n      <section className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">Travel Tips</h2>\n            <p className=\"text-muted-foreground text-lg\">Essential information for your perfect Indore experience</p>\n          </motion.div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              { icon: '🚗', title: 'Getting Around', tip: 'Auto-rickshaws and city buses are the most convenient ways to travel within the city.' },\n              { icon: '🕐', title: 'Best Time to Visit', tip: 'October to March offers pleasant weather perfect for sightseeing and outdoor activities.' },\n              { icon: '💰', title: 'Budget Friendly', tip: 'Street food starts from ₹20, and most attractions have very reasonable entry fees.' },\n              { icon: '🗣️', title: 'Local Language', tip: 'Hindi and Marathi are widely spoken, but English is understood in tourist areas.' },\n              { icon: '📱', title: 'Stay Connected', tip: 'Free WiFi is available in most hotels and many restaurants and cafes.' },\n              { icon: '🛡️', title: 'Safety Tips', tip: 'Indore is generally safe, but keep valuables secure and avoid isolated areas at night.' }\n            ].map((tip, index) => (\n              <motion.div\n                key={tip.title}\n                className=\"bg-card p-6 rounded-lg border border-border card-hover\"\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"text-3xl mb-4\">{tip.icon}</div>\n                <h3 className=\"text-lg font-semibold mb-3\">{tip.title}</h3>\n                <p className=\"text-muted-foreground\">{tip.tip}</p>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-primary\">\n        <div className=\"container mx-auto px-4 lg:px-6 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6 text-primary-foreground\">Start Your Journey Today</h2>\n            <p className=\"text-primary-foreground/80 text-lg mb-8 max-w-2xl mx-auto\">\n              Whether you're planning a short visit or an extended stay, Indore has something special waiting for you.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link\n                href=\"/places\"\n                className=\"bg-background text-primary px-8 py-4 rounded-lg text-lg font-semibold hover:bg-background/90 transition-colors\"\n                data-testid=\"button-explore-places\"\n              >\n                Explore Places\n              </Link>\n              <Link\n                href=\"/food\"\n                className=\"bg-transparent border-2 border-primary-foreground text-primary-foreground hover:bg-primary-foreground hover:text-primary px-8 py-4 rounded-lg text-lg font-semibold transition-colors\"\n                data-testid=\"button-discover-food\"\n              >\n                Discover Food\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </Layout>\n  );\n}","size_bytes":30994},"client/src/pages/News.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useQuery } from '@tanstack/react-query';\nimport { NewsArticle } from '@shared/schema';\nimport Layout from '@/components/Layout';\n\nconst categories = ['all', 'city', 'culture', 'travel', 'development'];\n\nexport default function NewsPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  \n  const { data: articles = [], isLoading, error } = useQuery<NewsArticle[]>({\n    queryKey: ['/api/news'],\n    refetchInterval: 600000, // Refetch every 10 minutes\n  });\n\n  const formatDate = (dateString: string) => {\n    const now = new Date();\n    const publishedDate = new Date(dateString);\n    const diffTime = Math.abs(now.getTime() - publishedDate.getTime());\n    const diffHours = Math.ceil(diffTime / (1000 * 60 * 60));\n\n    if (diffHours < 24) {\n      return `${diffHours} hours ago`;\n    } else if (diffHours < 48) {\n      return '1 day ago';\n    } else {\n      return `${Math.floor(diffHours / 24)} days ago`;\n    }\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'city': 'bg-blue-500/20 text-blue-400',\n      'culture': 'bg-purple-500/20 text-purple-400',\n      'travel': 'bg-green-500/20 text-green-400',\n      'development': 'bg-orange-500/20 text-orange-400',\n      'general': 'bg-gray-500/20 text-gray-400'\n    };\n    return colors[category] || colors.general;\n  };\n\n  const filteredArticles = selectedCategory === 'all' \n    ? articles \n    : articles.filter(article => article.category === selectedCategory);\n\n  if (isLoading) {\n    return (\n      <Layout title=\"Latest News - Indore\">\n        <div className=\"py-20 flex items-center justify-center min-h-96\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\n            <p className=\"text-muted-foreground\">Loading latest news...</p>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout \n      title=\"Latest News - Indore Updates & Headlines\"\n      description=\"Stay updated with the latest news from Indore. Get current information about city developments, culture, travel, and local events.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">Latest News</h1>\n            <p className=\"text-xl text-muted-foreground\">\n              Stay updated with the latest happenings in and around Indore\n            </p>\n          </motion.div>\n\n          {/* Category Filter */}\n          <motion.div\n            className=\"flex flex-wrap justify-center gap-4 mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            {categories.map((category) => (\n              <button\n                key={category}\n                onClick={() => setSelectedCategory(category)}\n                className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 capitalize ${\n                  selectedCategory === category\n                    ? 'bg-primary text-primary-foreground'\n                    : 'bg-card hover:bg-muted border border-border'\n                }`}\n                data-testid={`filter-${category}`}\n              >\n                {category}\n              </button>\n            ))}\n          </motion.div>\n\n          {error && (\n            <motion.div\n              className=\"text-center mb-8\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.5 }}\n            >\n              <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-6 max-w-md mx-auto\">\n                <p className=\"text-destructive\">Unable to load news. Please try again later.</p>\n              </div>\n            </motion.div>\n          )}\n\n          {/* News Articles */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredArticles.length > 0 ? (\n              filteredArticles.map((article, index) => (\n                <motion.article\n                  key={article.id}\n                  className=\"bg-card border border-border rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300\"\n                  initial={{ opacity: 0, y: 50 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  data-testid={`article-${index}`}\n                >\n                  {article.urlToImage && (\n                    <div className=\"relative h-48 overflow-hidden\">\n                      <img\n                        src={article.urlToImage}\n                        alt={article.title}\n                        className=\"object-cover w-full h-full hover:scale-105 transition-transform duration-300\"\n                      />\n                      <div className=\"absolute top-4 left-4\">\n                        <span className={`px-3 py-1 rounded-full text-xs font-medium ${getCategoryColor(article.category)}`}>\n                          {article.category}\n                        </span>\n                      </div>\n                    </div>\n                  )}\n                  \n                  <div className=\"p-6\">\n                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground mb-3\">\n                      <span data-testid={`article-author-${index}`}>{article.author}</span>\n                      <span>•</span>\n                      <span data-testid={`article-date-${index}`}>{formatDate(article.publishedAt)}</span>\n                    </div>\n                    \n                    <h2 className=\"text-xl font-bold mb-3 line-clamp-2\" data-testid={`article-title-${index}`}>\n                      {article.title}\n                    </h2>\n                    \n                    <p className=\"text-muted-foreground mb-4 line-clamp-3\" data-testid={`article-description-${index}`}>\n                      {article.description}\n                    </p>\n                    \n                    <a\n                      href={article.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"inline-flex items-center text-primary hover:text-primary/80 font-medium transition-colors\"\n                      data-testid={`article-link-${index}`}\n                    >\n                      Read Full Article\n                      <svg className=\"w-4 h-4 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                      </svg>\n                    </a>\n                  </div>\n                </motion.article>\n              ))\n            ) : (\n              !isLoading && (\n                <motion.div\n                  className=\"col-span-full text-center py-12\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.5 }}\n                >\n                  <div className=\"text-6xl mb-4\">📰</div>\n                  <h3 className=\"text-xl font-semibold mb-2\">No articles found</h3>\n                  <p className=\"text-muted-foreground\">\n                    {selectedCategory === 'all' \n                      ? 'No news articles available at the moment.'\n                      : `No articles found in the \"${selectedCategory}\" category.`\n                    }\n                  </p>\n                </motion.div>\n              )\n            )}\n          </div>\n\n          {/* News Sources Info */}\n          <motion.div\n            className=\"mt-16 text-center bg-secondary p-8 rounded-lg\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.8 }}\n          >\n            <h2 className=\"text-2xl font-bold mb-4\">Stay Informed</h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n              Our news section aggregates the latest updates about Indore from reliable sources. \n              We cover city developments, cultural events, tourism updates, and other important local news.\n            </p>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":8730},"client/src/pages/Places.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Layout from '@/components/Layout';\n\nconst places = [\n  {\n    id: 1,\n    name: 'Rajwada Palace',\n    description: 'A seven-story palace of the Holkar dynasty, showcasing magnificent Maratha architecture and Indo-Saracenic style.',\n    category: 'historical',\n    imageUrl: 'https://images.unsplash.com/photo-1609920658906-8223bd289001?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Central Indore'\n  },\n  {\n    id: 2,\n    name: 'Lal Bagh Palace',\n    description: 'An opulent palace built by the Holkar rulers, featuring European architecture and luxurious interiors.',\n    category: 'historical',\n    imageUrl: 'https://images.unsplash.com/photo-1534050359320-02900022671e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Lal Bagh'\n  },\n  {\n    id: 3,\n    name: 'Sarafa Bazaar',\n    description: 'The famous night food market where jewelry shops transform into street food paradise after dark.',\n    category: 'modern',\n    imageUrl: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Sarafa Bazaar'\n  },\n  {\n    id: 4,\n    name: 'Kanch Mandir',\n    description: 'A magnificent Jain temple made entirely of glass and mirrors, creating a dazzling spiritual experience.',\n    category: 'religious',\n    imageUrl: 'https://images.unsplash.com/photo-1532777946373-b6783242f211?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Itwaria Bazaar'\n  },\n  {\n    id: 5,\n    name: 'Patalpani Waterfall',\n    description: 'A scenic waterfall near Indore, perfect for trekking and experiencing nature\\'s beauty during monsoons.',\n    category: 'nature',\n    imageUrl: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: '35km from Indore'\n  },\n  {\n    id: 6,\n    name: 'Central Museum',\n    description: 'Houses rare artifacts, sculptures, and archaeological findings showcasing the region\\'s rich history.',\n    category: 'historical',\n    imageUrl: 'https://images.unsplash.com/photo-1594736797933-d0d8e23ca4ef?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'A.B. Road'\n  },\n  {\n    id: 7,\n    name: 'Khajrana Ganesh Temple',\n    description: 'One of the most revered temples in Indore, famous for its wish-fulfilling Ganesh deity.',\n    category: 'religious',\n    imageUrl: 'https://images.unsplash.com/photo-1516726817505-f5ed825624d8?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: 'Khajrana'\n  },\n  {\n    id: 8,\n    name: 'Ralamandal Wildlife Sanctuary',\n    description: 'A beautiful wildlife sanctuary offering nature trails, bird watching, and peaceful surroundings.',\n    category: 'nature',\n    imageUrl: 'https://images.unsplash.com/photo-1441974231531-c6227db76b6e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    location: '15km from Indore'\n  }\n];\n\nconst categories = ['all', 'historical', 'religious', 'modern', 'nature'];\n\nexport default function PlacesPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  const filteredPlaces = selectedCategory === 'all' \n    ? places \n    : places.filter(place => place.category === selectedCategory);\n\n  const getCategoryIcon = (category: string) => {\n    const icons: Record<string, string> = {\n      'historical': '🏛️',\n      'religious': '🕉️',\n      'modern': '🏙️',\n      'nature': '🌿'\n    };\n    return icons[category] || '📍';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'historical': 'bg-amber-500/20 text-amber-400',\n      'religious': 'bg-purple-500/20 text-purple-400',\n      'modern': 'bg-blue-500/20 text-blue-400',\n      'nature': 'bg-green-500/20 text-green-400'\n    };\n    return colors[category] || 'bg-gray-500/20 text-gray-400';\n  };\n\n  return (\n    <Layout \n      title=\"Places to Visit in Indore - Tourist Attractions & Monuments\"\n      description=\"Explore the best places to visit in Indore including historical palaces, religious temples, modern attractions, and natural spots. Discover Rajwada, Lal Bagh Palace, Khajrana Temple and more.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">Places to Visit in Indore</h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Discover the magnificent heritage, spiritual sanctuaries, and natural beauty that make Indore a captivating destination\n            </p>\n          </motion.div>\n\n          {/* Category Filter */}\n          <motion.div\n            className=\"flex flex-wrap justify-center gap-4 mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            {categories.map((category) => (\n              <button\n                key={category}\n                onClick={() => setSelectedCategory(category)}\n                className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 capitalize flex items-center gap-2 ${\n                  selectedCategory === category\n                    ? 'bg-primary text-primary-foreground'\n                    : 'bg-card hover:bg-muted border border-border'\n                }`}\n                data-testid={`filter-${category}`}\n              >\n                {category !== 'all' && <span>{getCategoryIcon(category)}</span>}\n                {category}\n              </button>\n            ))}\n          </motion.div>\n\n          {/* Places Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n            {filteredPlaces.map((place, index) => (\n              <motion.div\n                key={place.id}\n                className=\"bg-card border border-border rounded-lg overflow-hidden hover:shadow-lg transition-all duration-300 group\"\n                initial={{ opacity: 0, y: 50 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                whileHover={{ y: -8 }}\n                data-testid={`place-${place.id}`}\n              >\n                <div className=\"relative h-48 overflow-hidden\">\n                  <img\n                    src={place.imageUrl}\n                    alt={place.name}\n                    className=\"object-cover w-full h-full group-hover:scale-110 transition-transform duration-300\"\n                  />\n                  <div className=\"absolute top-4 left-4\">\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${getCategoryColor(place.category)}`}>\n                      {getCategoryIcon(place.category)} {place.category}\n                    </span>\n                  </div>\n                  <div className=\"absolute bottom-4 right-4 bg-black/70 text-white px-3 py-1 rounded-full text-sm\">\n                    <svg className=\"w-4 h-4 inline mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    </svg>\n                    {place.location}\n                  </div>\n                </div>\n                \n                <div className=\"p-6\">\n                  <h3 className=\"text-xl font-bold mb-3\" data-testid={`place-name-${place.id}`}>\n                    {place.name}\n                  </h3>\n                  <p className=\"text-muted-foreground mb-4 line-clamp-3\" data-testid={`place-description-${place.id}`}>\n                    {place.description}\n                  </p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">{place.location}</span>\n                    <button className=\"text-primary hover:text-primary/80 font-medium transition-colors flex items-center gap-1\" data-testid={`place-learn-more-${place.id}`}>\n                      Learn More\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Travel Tips */}\n          <motion.div\n            className=\"bg-secondary p-8 rounded-lg\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-center mb-8\">Travel Tips for Exploring Indore</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🚗</div>\n                <h3 className=\"font-semibold mb-2\">Transportation</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Use auto-rickshaws, cabs, or rent a car for convenient city travel\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">⏰</div>\n                <h3 className=\"font-semibold mb-2\">Best Time</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Visit between October to March for pleasant weather\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">📸</div>\n                <h3 className=\"font-semibold mb-2\">Photography</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Most places allow photography, but check rules at religious sites\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🎫</div>\n                <h3 className=\"font-semibold mb-2\">Entry Fees</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Some historical sites have nominal entry fees for maintenance\n                </p>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":10860},"client/src/pages/Weather.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useQuery } from '@tanstack/react-query';\nimport { WeatherData } from '@shared/schema';\nimport Layout from '@/components/Layout';\n\nexport default function WeatherPage() {\n  const { data: weatherData, isLoading, error } = useQuery<WeatherData>({\n    queryKey: ['/api/weather'],\n    refetchInterval: 300000, // Refetch every 5 minutes\n  });\n\n  const getWeatherIcon = (condition: string) => {\n    const icons: Record<string, string> = {\n      'Clear': '☀️',\n      'Clouds': '☁️',\n      'Rain': '🌧️',\n      'Drizzle': '🌦️',\n      'Thunderstorm': '⛈️',\n      'Snow': '🌨️',\n      'Mist': '🌫️',\n      'Sunny': '☀️',\n      'Partly Cloudy': '⛅',\n      'Cloudy': '☁️',\n      'Light Rain': '🌦️',\n      'Overcast': '☁️',\n      'Hot': '🌡️'\n    };\n    return icons[condition] || '🌤️';\n  };\n\n  if (isLoading) {\n    return (\n      <Layout title=\"Weather in Indore\">\n        <div className=\"py-20 flex items-center justify-center min-h-96\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\n            <p className=\"text-muted-foreground\">Loading weather data...</p>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (error) {\n    return (\n      <Layout title=\"Weather in Indore\">\n        <div className=\"py-20\">\n          <div className=\"container mx-auto px-4 lg:px-6\">\n            <div className=\"text-center\">\n              <h1 className=\"text-4xl font-bold mb-4\">Weather in Indore</h1>\n              <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-6 max-w-md mx-auto\">\n                <p className=\"text-destructive\">Unable to load weather data. Please try again later.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout \n      title=\"Weather in Indore - Current Conditions & Forecast\"\n      description=\"Stay updated with current weather conditions and forecast in Indore. Plan your visit with accurate weather information and temperature updates.\"\n    >\n      <div className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl font-bold mb-6\">Weather in Indore</h1>\n            <p className=\"text-xl text-muted-foreground\">\n              Current conditions and forecast to help you plan your visit\n            </p>\n          </motion.div>\n\n          {weatherData && (\n            <>\n              {/* Current Weather */}\n              <motion.div\n                className=\"mb-16\"\n                initial={{ opacity: 0, scale: 0.95 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n              >\n                <div className=\"bg-gradient-to-br from-primary/10 to-primary/5 border border-primary/20 rounded-xl p-8 text-center\">\n                  <div className=\"flex items-center justify-center mb-6\">\n                    <span className=\"text-6xl mr-4\">{getWeatherIcon(weatherData.condition)}</span>\n                    <div>\n                      <div className=\"text-5xl font-bold\" data-testid=\"text-temperature\">\n                        {weatherData.temperature}°C\n                      </div>\n                      <div className=\"text-xl text-muted-foreground capitalize\" data-testid=\"text-condition\">\n                        {weatherData.condition}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\" data-testid=\"text-feels-like\">\n                        {weatherData.feelsLike}°C\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Feels Like</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\" data-testid=\"text-humidity\">\n                        {weatherData.humidity}%\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Humidity</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\" data-testid=\"text-wind-speed\">\n                        {weatherData.windSpeed} km/h\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Wind Speed</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\" data-testid=\"text-visibility\">\n                        {weatherData.visibility} km\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Visibility</div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n\n              {/* 7-Day Forecast */}\n              {weatherData.forecast && weatherData.forecast.length > 0 && (\n                <motion.div\n                  initial={{ opacity: 0, y: 50 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.8, delay: 0.4 }}\n                >\n                  <h2 className=\"text-3xl font-bold text-center mb-12\">7-Day Forecast</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-7 gap-4\">\n                    {weatherData.forecast.slice(0, 7).map((day, index) => (\n                      <motion.div\n                        key={index}\n                        className=\"bg-card border border-border rounded-lg p-4 text-center\"\n                        initial={{ opacity: 0, y: 30 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.6, delay: 0.6 + index * 0.1 }}\n                        data-testid={`forecast-day-${index}`}\n                      >\n                        <div className=\"font-semibold mb-2 text-sm\" data-testid={`forecast-day-name-${index}`}>\n                          {day.day}\n                        </div>\n                        <div className=\"text-2xl mb-2\">{getWeatherIcon(day.condition)}</div>\n                        <div className=\"text-sm text-muted-foreground mb-2\" data-testid={`forecast-condition-${index}`}>\n                          {day.condition}\n                        </div>\n                        <div className=\"space-y-1\">\n                          <div className=\"font-bold\" data-testid={`forecast-high-${index}`}>\n                            {day.high}°\n                          </div>\n                          <div className=\"text-muted-foreground text-sm\" data-testid={`forecast-low-${index}`}>\n                            {day.low}°\n                          </div>\n                        </div>\n                      </motion.div>\n                    ))}\n                  </div>\n                </motion.div>\n              )}\n\n              {/* Weather Tips */}\n              <motion.div\n                className=\"mt-16 bg-secondary p-8 rounded-lg\"\n                initial={{ opacity: 0, y: 50 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, delay: 0.8 }}\n              >\n                <h2 className=\"text-2xl font-bold mb-6 text-center\">Weather Tips for Indore</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl mb-3\">🌡️</div>\n                    <h3 className=\"font-semibold mb-2\">Summer (April-June)</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Hot and dry. Carry water, sunscreen, and light cotton clothing.\n                    </p>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl mb-3\">🌧️</div>\n                    <h3 className=\"font-semibold mb-2\">Monsoon (July-September)</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Heavy rainfall. Carry umbrella and waterproof clothing.\n                    </p>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl mb-3\">🍃</div>\n                    <h3 className=\"font-semibold mb-2\">Winter (October-March)</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Pleasant and cool. Perfect for sightseeing and outdoor activities.\n                    </p>\n                  </div>\n                </div>\n              </motion.div>\n            </>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":9195}},"version":1}
I have an existing Next.js + React + TailwindCSS project. Your task is to analyze the project, detect all the existing pages/sections, and extend it by adding a full-featured dynamic Admin Panel with MongoDB integration.

üîß Admin Panel Requirements

Create a secure Admin Panel (/admin) with authentication (JWT or NextAuth).

Add a dark/light mode toggle in the admin panel. Save preference in local storage.

Admin Dashboard should have:

Sidebar navigation with links to all sections.

Responsive UI with TailwindCSS.

Use tables for listing content and forms/modals for creating/editing.

Image upload support with preview.

Search + filter options for large datasets.

üìÑ Admin Features (Apply CRUD for All Sections)

Detect all sections/pages from the project (such as Places to Visit, Food & Cuisine, Events & Festivals, Gallery, History/About, Contact/Feedback, News, Weather, etc.).

For each section, add Create, Read, Update, Delete functionality in the admin panel.

Admin should be able to:

Add/edit text, images, links, dates, and categories.

Manage timeline/history entries.

Manage events with date pickers.

View feedback form submissions from users.

Update API keys for News & Weather in a Settings page.

üì¶ Database (MongoDB)

Integrate MongoDB (I will provide credentials).

Create collections for each content type (places, food, events, gallery, history, settings, feedback).

Pre-fill with sample data so I can later update it.

Client-side pages must fetch and render data dynamically from MongoDB.

üåê API Integrations

Weather: Connect OpenWeatherMap API. Show current weather + forecast on /weather. Admin should be able to update API key and location in settings.

News: Connect NewsAPI or RSS feed. Show news on /news. Admin should be able to update API key and categories in settings.

üñ•Ô∏è Client Website

Keep the existing client-facing site exactly as it is, just replace static data with database-driven dynamic content.

All designs and layouts must remain unchanged on the client side.

üìò README.md

Generate a complete README file with:

Project overview

Tech stack (Next.js, React, TailwindCSS, MongoDB, Framer Motion, APIs)

Folder structure explanation

Setup instructions (installation, environment variables, database setup)

How to run locally & deploy on Vercel/Replit

Admin login instructions

API configuration guide (Weather + News)

Dark/Light mode feature notes

‚ö° Final Notes

Code should be modular, clean, and production-ready.

Protect all admin routes with authentication/authorization.

Use Tailwind utility classes consistently.

Ensure full mobile responsiveness across all screens.